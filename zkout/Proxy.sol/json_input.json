{
  "language": "Solidity",
  "sources": {
    "src/Proxy/UUPS/Proxy.sol": {
      "content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity 0.8.13;\n\ncontract UUPSProxy {\n    address public implementation;\n    address public admin;\n    string public words;\n\n    constructor(address _implementation) {\n        implementation = _implementation;\n        admin = msg.sender;\n    }\n\n    fallback() external payable {\n        (bool success, bytes memory data) = implementation.delegatecall(msg.data);\n    }\n}\n"
    }
  },
  "settings": {
    "remappings": [
      "ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/",
      "forge-std/=lib/forge-std/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "mode": "3",
      "details": null,
      "fallbackToOptimizingForSize": false,
      "disableSystemRequestMemoization": true
    },
    "outputSelection": {
      "*": {
        "": [
          "metadata"
        ],
        "*": [
          "abi",
          "evm.methodIdentifiers"
        ]
      }
    },
    "libraries": {},
    "isSystem": false,
    "forceEvmla": false,
    "areLibrariesMissing": true
  }
}