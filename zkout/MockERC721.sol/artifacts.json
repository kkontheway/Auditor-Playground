{
  "contracts": {
    "lib/forge-std/src/interfaces/IERC165.sol": {
      "IERC165": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceID",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "supportsInterface(bytes4)": "01ffc9a7"
          }
        },
        "irOptimized": ""
      }
    },
    "lib/forge-std/src/interfaces/IERC721.sol": {
      "IERC721": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceID",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721 Note: the ERC-165 identifier for this interface is 0x80ac58cd.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or reaffirmed. The zero address indicates there is no approved address. When a Transfer event emits, this also indicates that the approved address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner. The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any number of NFTs may be created and assigned without emitting Transfer. At the time of any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "getApproved(uint256)": "081812fc",
            "isApprovedForAll(address,address)": "e985e9c5",
            "ownerOf(uint256)": "6352211e",
            "safeTransferFrom(address,address,uint256)": "42842e0e",
            "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
            "setApprovalForAll(address,bool)": "a22cb465",
            "supportsInterface(bytes4)": "01ffc9a7",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": ""
      },
      "IERC721Enumerable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceID",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_index",
                "type": "uint256"
              }
            ],
            "name": "tokenByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_index",
                "type": "uint256"
              }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721 Note: the ERC-165 identifier for this interface is 0x780e9d63.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT, (sort order not specified)\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_owner)` or if `_owner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_owner)`\",\"_owner\":\"An address where we are interested in NFTs owned by them\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT assigned to `_owner`, (sort order not specified)\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"A count of valid NFTs tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"totalSupply()\":{\"notice\":\"Count NFTs tracked by this contract\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "getApproved(uint256)": "081812fc",
            "isApprovedForAll(address,address)": "e985e9c5",
            "ownerOf(uint256)": "6352211e",
            "safeTransferFrom(address,address,uint256)": "42842e0e",
            "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
            "setApprovalForAll(address,bool)": "a22cb465",
            "supportsInterface(bytes4)": "01ffc9a7",
            "tokenByIndex(uint256)": "4f6ccce7",
            "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
            "totalSupply()": "18160ddd",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": ""
      },
      "IERC721Metadata": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "_name",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceID",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "_symbol",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "tokenURI",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721 Note: the ERC-165 identifier for this interface is 0x5b5e139f.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC 3986. The URI may point to a JSON file that conforms to the \\\"ERC721 Metadata JSON Schema\\\".\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "getApproved(uint256)": "081812fc",
            "isApprovedForAll(address,address)": "e985e9c5",
            "name()": "06fdde03",
            "ownerOf(uint256)": "6352211e",
            "safeTransferFrom(address,address,uint256)": "42842e0e",
            "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
            "setApprovalForAll(address,bool)": "a22cb465",
            "supportsInterface(bytes4)": "01ffc9a7",
            "symbol()": "95d89b41",
            "tokenURI(uint256)": "c87b56dd",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": ""
      },
      "IERC721TokenReceiver": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "onERC721Received",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note: the ERC-165 identifier for this interface is 0x150b7a02.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the contract address is always the message sender.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_operator\":\"The address which called `safeTransferFrom` function\",\"_tokenId\":\"The NFT identifier which is being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`  unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "onERC721Received(address,address,uint256,bytes)": "150b7a02"
          }
        },
        "irOptimized": ""
      }
    },
    "lib/forge-std/src/mocks/MockERC721.sol": {
      "IERC721TokenReceiver": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "name": "onERC721Received",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/mocks/MockERC721.sol\":\"IERC721TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "onERC721Received(address,address,uint256,bytes)": "150b7a02"
          }
        },
        "irOptimized": ""
      },
      "MockERC721": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "name_",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "symbol_",
                "type": "string"
              }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "tokenURI",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Forked from: https://github.com/transmissions11/solmate/blob/0384dbaaa4fcb5715738a9254a7c0a4cb62cf458/src/tokens/ERC721.sol\",\"kind\":\"dev\",\"methods\":{\"initialize(string,string)\":{\"details\":\"To hide constructor warnings across solc versions due to different constructor visibility requirements and syntaxes, we add an initialization function that can be called only once.\"}},\"stateVariables\":{\"initialized\":{\"details\":\"A bool to track whether the contract has been initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"}},\"notice\":\"This is a mock contract of the ERC721 standard for testing purposes only, it SHOULD NOT be used in production.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/mocks/MockERC721.sol\":\"MockERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]}},\"version\":1}",
          "solc_version": "0.8.13",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"MockERC721.sol:MockERC721\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r8\n\tst.1\t64, r8\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_9\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_260\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_11\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.le\t@.BB0_43\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.gt\t@.BB0_56\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.eq\t@.BB0_72\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_260\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n.BB0_8:\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_260\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.le\t@.BB0_49\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_79\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_260\n\tsub.s!\t132, r3, r2\n\tjump.lt\t@.BB0_260\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.gt\t@.BB0_260\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.gt\t@.BB0_260\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_24[0], r4, r2\n\tjump.gt\t@.BB0_260\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_260\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_24[0], r2, r6\n\tjump.gt\t@.BB0_64\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tadd\t63, r6, r6\n\tand\tr6, r9, r6\n\tsub.s!\t@CPI0_25[0], r6, r7\n\tjump.gt\t@.BB0_64\n\tadd\tr9, r0, stack-[5]\n\tadd\t36, r4, r4\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_260\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_26\n\tadd\tr0, r0, r5\n.BB0_25:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_25\n.BB0_26:\n\tadd\tr8, r0, stack-[3]\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_28\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_28:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_21[0], r1, r1\n\tsub!\tstack-[8], r1, r1\n\tjump.ne\t@.BB0_170\n\tsub!\tstack-[7], r0, r1\n\tjump.eq\t@.BB0_112\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[2]\n\tsub.s!\tstack-[8], r2, r1\n\tjump.ne\t@.BB0_190\n.BB0_32:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_175\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_175\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_27[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_27[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_29[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_260\n\tadd\t@CPI0_30[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_213\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_242\n\tadd\t1, r0, r1\n.BB0_42:\n\tand\t1, r1, r1\n\tnear_call\tr0, @require_helper_stringliteral_91ac, @DEFAULT_UNWIND\n\tjump\t@.BB0_8\n.BB0_43:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_87\n\tsub.s!\t@CPI0_19[0], r2, r4\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.ne\t@.BB0_260\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_260\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_260\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand\t@CPI0_21[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.eq\t@.BB0_96\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_101\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.ne\t@.BB0_260\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_260\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_95\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_124\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tsub.s\t64, r0, r1\n\tjump\t@.BB0_168\n.BB0_56:\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_106\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.ne\t@.BB0_260\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r4\n\tjump.lt\t@.BB0_260\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_260\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_24[0], r5, r2\n\tjump.gt\t@.BB0_260\n\tadd\t35, r5, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_260\n\tadd\t4, r5, r6\n\tptr.add\tr1, r6, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_24[0], r4, r2\n\tjump.gt\t@.BB0_64\n\tadd\t31, r4, r7\n\tsub.s\t32, r0, r2\n\tand\tr7, r2, r7\n\tadd\t63, r7, r7\n\tand\tr7, r2, r7\n\tsub.s!\t@CPI0_25[0], r7, r8\n\tjump.le\t@.BB0_130\n.BB0_64:\n\tadd\t@CPI0_48[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_49[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_65:\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.eq\t@.BB0_113\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.ne\t@.BB0_260\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_260\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_260\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.gt\t@.BB0_260\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_21[0], r1, r1\n\tjump.gt\t@.BB0_260\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_22[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_72:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_260\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.gt\t@.BB0_260\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_21[0], r1, r2\n\tcontext.caller\tr3\n\tsub!\tr3, r2, r1\n\tadd\tr2, r0, stack-[6]\n\tjump.ne\t@.BB0_157\n.BB0_76:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_27[0], r2, r2\n\tadd\tstack-[8], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, stack-[5]\n\tshl.s\t192, r2, r1\n\tor\tstack-[5], r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_52[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_260\n\tadd\tstack-[5], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_79:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_260\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_260\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.gt\t@.BB0_260\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[7]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_260\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[7], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_36[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[8], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_260\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_87:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_260\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_260\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tand!\t@CPI0_33[0], r2, r1\n\tjump.ne\t@.BB0_260\n\tadd\t1, r0, r1\n\tand\t@CPI0_34[0], r2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_54[0], r2, r3\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tadd.ne\tr0, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_93:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_260\n\tsload\tr0, r1\n\tand!\t1, r1, r3\n\tshr.s\t1, r1, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.eq\t@.BB0_121\n.BB0_95:\n\tadd\t@CPI0_48[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_49[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_96:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_260\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_260\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_126\n\tadd\t68, r2, r1\n\tadd\t@CPI0_42[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r1\n\tadd\t10, r0, r4\n\tst.1\tr1, r4\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tor\t@CPI0_43[0], r3, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_101:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_260\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_260\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.gt\t@.BB0_260\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_127\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t12, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_41[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_106:\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_260\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.gt\t@.BB0_260\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.gt\t@.BB0_260\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_21[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_170\n\tsub!\tstack-[7], r0, r1\n\tjump.ne\t@.BB0_172\n.BB0_112:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_50[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tjump\t@.BB0_171\n.BB0_113:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_260\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_260\n\tadd\t32, r0, r1\n\tst.1\t128, r1\n\tld.1\t96, r1\n\tst.1\t160, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_120\n\tadd\tr0, r0, r2\n.BB0_117:\n\tadd\t128, r2, r3\n\tld.1\tr3, r3\n\tadd\t192, r2, r4\n\tst.1\tr4, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_117\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB0_120\n\tadd\t192, r1, r2\n\tst.1\tr2, r0\n.BB0_120:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t64, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_121:\n\tst.1\t128, r2\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_129\n\tadd\t160, r0, r1\n\tst.1\t0, r0\n\tsub!\tr2, r0, r3\n\tjump.ne\t@.BB0_161\n\tsub.s\t128, r0, r2\n\tjump\t@.BB0_164\n.BB0_124:\n\tst.1\t0, r3\n\tadd\t160, r0, r8\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_165\n\tsub.s\t128, r0, r1\n\tjump\t@.BB0_168\n.BB0_126:\n\tst.1\tr2, r1\n\tor\t@CPI0_22[0], r3, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_127:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_128:\n\tst.1\t128, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_129:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\t160, r1\n\tadd\t128, r0, r1\n\tsub.s\t64, r0, r2\n\tjump\t@.BB0_164\n.BB0_130:\n\tadd\t36, r5, r5\n\tadd\t128, r7, r7\n\tst.1\t64, r7\n\tst.1\t128, r4\n\tadd\tr4, r5, r5\n\tsub!\tr5, r3, r5\n\tjump.gt\t@.BB0_260\n\tadd\t32, r6, r5\n\tptr.add\tr1, r5, r5\n\tand\t31, r4, r6\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB0_134\n\tadd\tr0, r0, r8\n.BB0_133:\n\tshl.s\t5, r8, r9\n\tptr.add\tr5, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_133\n.BB0_134:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_136\n\tshl.s\t5, r7, r7\n\tptr.add\tr5, r7, r5\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr5, r5\n\tsub\t256, r6, r6\n\tshr\tr5, r6, r5\n\tshl\tr5, r6, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB0_136:\n\tadd\t160, r4, r4\n\tst.1\tr4, r0\n\tptr.add.s\t36, r1, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_24[0], r5, r4\n\tjump.gt\t@.BB0_260\n\tadd\t35, r5, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_260\n\tadd\t4, r5, r7\n\tptr.add\tr1, r7, r4\n\tld\tr4, r6\n\tsub.s!\t@CPI0_24[0], r6, r4\n\tjump.gt\t@.BB0_64\n\tadd\t31, r6, r4\n\tand\tr4, r2, r4\n\tadd\t63, r4, r4\n\tand\tr4, r2, r8\n\tld.1\t64, r4\n\tadd\tr4, r8, r8\n\tsub!\tr8, r4, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI0_24[0], r8, r10\n\tjump.gt\t@.BB0_64\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB0_64\n\tadd\t36, r5, r9\n\tst.1\t64, r8\n\tst.1.inc\tr4, r6, r5\n\tadd\tr6, r9, r8\n\tsub!\tr8, r3, r3\n\tjump.gt\t@.BB0_260\n\tadd\t32, r7, r3\n\tptr.add\tr1, r3, r3\n\tand\t31, r6, r1\n\tshr.s!\t5, r6, r7\n\tjump.eq\t@.BB0_145\n\tadd\tr0, r0, r8\n.BB0_144:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr3, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_144\n.BB0_145:\n\tsub!\tr1, r0, r8\n\tjump.eq\t@.BB0_147\n\tshl.s\t5, r7, r7\n\tptr.add\tr3, r7, r3\n\tadd\tr5, r7, r7\n\tshl.s\t3, r1, r1\n\tld.1\tr7, r8\n\tshl\tr8, r1, r8\n\tshr\tr8, r1, r8\n\tld\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r8, r1\n\tst.1\tr7, r1\n.BB0_147:\n\tadd\tr5, r6, r1\n\tst.1\tr1, r0\n\tadd\t6, r0, r1\n\tsload\tr1, r3\n\tand!\t255, r3, r3\n\tjump.ne\t@.BB0_189\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_24[0], r3, r6\n\tjump.gt\t@.BB0_64\n\tsload\tr0, r7\n\tand!\t1, r7, r6\n\tshr.s\t1, r7, r8\n\tand\t127, r8, r6\n\tadd.ne\tr8, r0, r6\n\tsub.s!\t31, r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\t1, r0, r8\n\txor\tr7, r8, r7\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_95\n\tsub.s!\t32, r6, r7\n\tjump.lt\t@.BB0_154\n\tadd\t31, r3, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_45[0], r7, r8\n\tadd\t@CPI0_45[0], r0, r7\n\tsub.s!\t32, r3, r9\n\tadd.ge\tr8, r0, r7\n\tst.1\t0, r0\n\tadd\t31, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\t@CPI0_45[0], r6, r6\n\tsub!\tr7, r6, r8\n\tjump.ge\t@.BB0_154\n.BB0_153:\n\tsstore\tr7, r0\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_153\n.BB0_154:\n\tsub.s!\t31, r3, r6\n\tjump.le\t@.BB0_195\n\tand!\tr3, r2, r7\n\tst.1\t0, r0\n\tjump.ne\t@.BB0_198\n\tadd\t160, r0, r8\n\tadd\t@CPI0_45[0], r0, r6\n\tjump\t@.BB0_201\n.BB0_157:\n\tadd\tr3, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tand\t@CPI0_21[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_76\n.BB0_160:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_51[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tjump\t@.BB0_171\n.BB0_161:\n\tadd\t@CPI0_45[0], r0, r3\n\tadd\tr0, r0, r5\n.BB0_162:\n\tadd\tr5, r0, r4\n\tsload\tr3, r5\n\tadd\t160, r4, r6\n\tst.1\tr6, r5\n\tadd\t1, r3, r3\n\tadd\t32, r4, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_162\n\tsub.s\t96, r4, r2\n.BB0_164:\n\tadd\tr1, r2, r2\n\tjump\t@.BB0_169\n.BB0_165:\n\tadd\t@CPI0_37[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_166:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_166\n\tsub.s\t96, r3, r1\n.BB0_168:\n\tadd\tr8, r1, r2\n.BB0_169:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_170:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t10, r0, r3\n.BB0_171:\n\tst.1\tr2, r3\n\tadd\t@CPI0_39[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_172:\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_176\n.BB0_173:\n\tst.1\t0, r2\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.ne\t@.BB0_181\n.BB0_175:\n\tadd\t@CPI0_48[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_49[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_176:\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI0_21[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[8], r0, r2\n\tjump.ne\t@.BB0_173\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_21[0], r1, r1\n\tsub!\tstack-[4], r1, r1\n\tadd\tstack-[8], r0, r2\n\tjump.ne\t@.BB0_160\n\tjump\t@.BB0_173\n.BB0_181:\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_175\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_27[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_27[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_29[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_260\n\tadd\t@CPI0_30[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_213\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_216\n\tadd\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral_91ac, @DEFAULT_UNWIND\n\tjump\t@.BB0_8\n.BB0_189:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_44[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tjump\t@.BB0_171\n.BB0_190:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tand\t@CPI0_21[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_32\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_260\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_21[0], r1, r1\n\tsub!\tstack-[2], r1, r1\n\tjump.eq\t@.BB0_32\n\tjump\t@.BB0_160\n.BB0_195:\n\tsub!\tr3, r0, r6\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB0_197\n\tld.1\t160, r6\n.BB0_197:\n\tshl.s\t3, r3, r7\n\tsub.s\t1, r0, r8\n\tshr\tr8, r7, r7\n\txor\tr7, r8, r7\n\tand\tr6, r7, r6\n\tshl.s\t1, r3, r3\n\tor\tr6, r3, r3\n\tjump\t@.BB0_204\n.BB0_198:\n\tadd\t@CPI0_45[0], r0, r6\n\tadd\t32, r0, r9\n\tadd\tr0, r0, r8\n.BB0_199:\n\tadd\tr9, r0, r10\n\tadd\t128, r10, r9\n\tld.1\tr9, r9\n\tsstore\tr6, r9\n\tadd\t32, r10, r9\n\tadd\t1, r6, r6\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r11\n\tjump.lt\t@.BB0_199\n\tadd\t160, r10, r8\n.BB0_201:\n\tsub!\tr7, r3, r7\n\tjump.ge\t@.BB0_203\n\tshl.s\t3, r3, r7\n\tand\t248, r7, r7\n\tsub.s\t1, r0, r9\n\tshr\tr9, r7, r7\n\txor\tr7, r9, r7\n\tld.1\tr8, r8\n\tand\tr8, r7, r7\n\tsstore\tr6, r7\n.BB0_203:\n\tshl.s\t1, r3, r3\n\tor\t1, r3, r3\n.BB0_204:\n\tsstore\tr0, r3\n\tld.1\tr4, r6\n\tsub.s!\t@CPI0_24[0], r6, r3\n\tjump.gt\t@.BB0_64\n\tadd\t1, r0, r3\n\tsload\tr3, r8\n\tand!\t1, r8, r7\n\tshr.s\t1, r8, r9\n\tand\t127, r9, r7\n\tadd.ne\tr9, r0, r7\n\tsub.s!\t31, r7, r9\n\tadd\t0, r0, r9\n\tadd.gt\t1, r0, r9\n\txor\tr8, r9, r8\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_95\n\tsub.s!\t32, r7, r8\n\tjump.lt\t@.BB0_210\n\tadd\t31, r6, r8\n\tshr.s\t5, r8, r8\n\tadd\t@CPI0_37[0], r8, r9\n\tadd\t@CPI0_37[0], r0, r8\n\tsub.s!\t32, r6, r10\n\tadd.ge\tr9, r0, r8\n\tadd\t1, r0, r9\n\tst.1\t0, r9\n\tadd\t31, r7, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_37[0], r7, r7\n\tsub!\tr8, r7, r9\n\tjump.ge\t@.BB0_210\n.BB0_209:\n\tsstore\tr8, r0\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_209\n.BB0_210:\n\tsub.s!\t32, r6, r7\n\tjump.lt\t@.BB0_214\n\tst.1\t0, r3\n\tand!\tr6, r2, r7\n\tjump.ne\t@.BB0_218\n\tadd\t32, r0, r5\n\tadd\t@CPI0_37[0], r0, r2\n\tjump\t@.BB0_220\n.BB0_213:\n\trevert\n.BB0_214:\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_224\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tld.1\tr5, r4\n\tand\tr4, r2, r2\n\tshl.s\t1, r6, r4\n\tjump\t@.BB0_223\n.BB0_216:\n\tld.1\t64, r3\n\tadd\t100, r3, r1\n\tadd\t128, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[5]\n\tadd\t132, r3, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_225\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_231\n.BB0_218:\n\tadd\t@CPI0_37[0], r0, r2\n\tadd\t32, r0, r5\n\tadd\tr0, r0, r8\n.BB0_219:\n\tadd\tr5, r4, r9\n\tld.1\tr9, r9\n\tsstore\tr2, r9\n\tadd\t32, r5, r5\n\tadd\t1, r2, r2\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_219\n.BB0_220:\n\tsub!\tr7, r6, r7\n\tjump.ge\t@.BB0_222\n\tshl.s\t3, r6, r7\n\tand\t248, r7, r7\n\tsub.s\t1, r0, r8\n\tshr\tr8, r7, r7\n\txor\tr7, r8, r7\n\tadd\tr5, r4, r4\n\tld.1\tr4, r4\n\tand\tr4, r7, r4\n\tsstore\tr2, r4\n.BB0_222:\n\tshl.s\t1, r6, r2\n\tadd\tr3, r0, r4\n.BB0_223:\n\tor\tr2, r4, r2\n.BB0_224:\n\tsstore\tr3, r2\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_8\n.BB0_225:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_228\n\tadd\tr0, r0, r7\n.BB0_227:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_227\n.BB0_228:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_230\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[5], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_230:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_236\n.BB0_231:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[5], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_24[0], r1, r4\n\tjump.gt\t@.BB0_64\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_64\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_260\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tand!\t@CPI0_33[0], r1, r2\n\tjump.ne\t@.BB0_260\n\tand\t@CPI0_34[0], r1, r1\n\tsub.s!\t@CPI0_32[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral_91ac, @DEFAULT_UNWIND\n\tjump\t@.BB0_8\n.BB0_236:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_239\n\tadd\tr0, r0, r6\n.BB0_238:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_238\n.BB0_239:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_241\n.BB0_240:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_241:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_242:\n\tld.1\t64, r3\n\tadd\t100, r3, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI0_21[0], r1, r1\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[4]\n\tadd\t132, r3, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_247\n\tadd\tstack-[4], r0, r2\n\tadd\t164, r2, r2\n\tadd\tr0, r0, r3\n.BB0_244:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_244\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB0_247\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB0_247:\n\tcontext.gas_left\tr2\n\tadd\tstack-[7], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_249\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_255\n.BB0_249:\n\tadd\t31, r1, r1\n\tand\tstack-[5], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[4], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_252\n\tadd\tr0, r0, r7\n.BB0_251:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_251\n.BB0_252:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_254\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[4], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_254:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_261\n.BB0_255:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[4], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_24[0], r1, r4\n\tjump.gt\t@.BB0_64\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_64\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_260\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tand!\t@CPI0_33[0], r1, r2\n\tjump.ne\t@.BB0_260\n\tand\t@CPI0_34[0], r1, r1\n\tsub.s!\t@CPI0_32[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tjump\t@.BB0_42\n.BB0_260:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_261:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_264\n\tadd\tr0, r0, r6\n.BB0_263:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_263\n.BB0_264:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_241\n\tjump\t@.BB0_240\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1.inc\tr2, r2, r3\n\tst.1\tr4, r2\n\tadd\t64, r1, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB1_5\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r1, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB1_2\n\tsub!\tr4, r2, r3\n\tjump.le\t@.BB1_5\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n.BB1_5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t99, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation:\n.func_begin3:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tjump.gt\t@.BB3_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_2\n\tst.1\t64, r1\n\tret\n.BB3_2:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin4:\n\tand\t@CPI4_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_transferFrom:\n.func_begin5:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI5_2[0], r1, r2\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI5_2[0], r1, r1\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB5_3\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI5_2[0], r1, stack-[4]\n\tjump.eq\t@.BB5_6\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[1]\n\tsub!\tr1, r2, r1\n\tadd\tr2, r0, stack-[3]\n\tjump.eq\t@.BB5_14\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI5_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tadd.ge\t@CPI5_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.ne\t@.BB5_14\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI5_2[0], r1, r1\n\tsub!\tstack-[1], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.ne\t@.BB5_13\n.BB5_14:\n\tst.1\t0, r2\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB5_16\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB5_16\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI5_7[0], r2, r2\n\tor\tstack-[4], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tadd.ge\t@CPI5_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI5_7[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI5_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI5_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI5_9[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_16:\n\tadd\t@CPI5_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t10, r0, r3\n\tjump\t@.BB5_4\n.BB5_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n.BB5_4:\n\tst.1\tr2, r3\n\tadd\t@CPI5_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_13:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tjump\t@.BB5_4\n.func_end5:\n\nrequire_helper_stringliteral_91ac:\n.func_begin6:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tret\n.BB6_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI6_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_2[0], r0, r2\n\tsub.s!\t@CPI6_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\n__cxa_throw:\n.func_begin7:\n\trevert\n.func_end7:\n\n__sha3:\n.func_begin8:\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tret\n.BB8_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\n__farcall:\n.func_begin9:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__staticcall:\n.func_begin10:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_1:\nCPI5_0:\nCPI6_2:\nCPI8_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 1666326813\nCPI0_3:\n\t.cell 2720838756\nCPI0_4:\n\t.cell 3363526364\nCPI0_5:\n\t.cell 3363526365\nCPI0_6:\n\t.cell 3917867461\nCPI0_7:\n\t.cell 2720838757\nCPI0_8:\n\t.cell 3096268766\nCPI0_9:\n\t.cell 1666326814\nCPI0_10:\n\t.cell 1889567281\nCPI0_11:\n\t.cell 2514000705\nCPI0_12:\n\t.cell 157198258\nCPI0_13:\n\t.cell 1115958797\nCPI0_14:\n\t.cell 1115958798\nCPI0_15:\n\t.cell 1289259894\nCPI0_16:\n\t.cell 157198259\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 33540519\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 135795452\nCPI0_21:\nCPI2_1:\nCPI4_0:\nCPI5_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_22:\n\t.cell 2535301200456458802993406410752\nCPI0_23:\n\t.cell 2361183241434822606848\nCPI0_24:\nCPI3_0:\n\t.cell 18446744073709551615\nCPI0_25:\n\t.cell 18446744073709551487\nCPI0_26:\nCPI4_2:\nCPI5_1:\nCPI8_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_27:\nCPI5_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_28:\nCPI5_8:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_29:\nCPI5_9:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_30:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_31:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_32:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI0_33:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI0_34:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_35:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_36:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_37:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_38:\n\t.cell 2535301202817642044428229017600\nCPI0_39:\nCPI5_4:\nCPI6_1:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_40:\n\t.cell 40830636903031423861688139537390718479674427448325055209562639556715193827328\nCPI0_41:\n\t.cell 7922816253787617000789217640448\nCPI0_42:\n\t.cell 35420565423639537228617691553148466105545936757585078819855793298259008552960\nCPI0_43:\nCPI5_5:\nCPI6_3:\n\t.cell 7922816251426433759354395033600\nCPI0_44:\n\t.cell 29535183345145645464477851197593903596241110250713156662292127721300527415296\nCPI0_45:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_46:\nCPI5_3:\n\t.cell 39496646634409606239827972489872868837952845752995518704443643484015993815040\nCPI0_47:\n\t.cell 12993418652339351365341207855104\nCPI0_48:\nCPI3_1:\nCPI5_10:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_49:\nCPI3_2:\nCPI5_11:\n\t.cell 2852213850513516153367582212096\nCPI0_50:\nCPI5_12:\n\t.cell 33157247328247392177347867825146339663983762987302272919419008699839968968704\nCPI0_51:\nCPI5_6:\n\t.cell 35420565422380735808816581324811381250276386706089210115323610567592544043008\nCPI0_52:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_53:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_54:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_55:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI6_0:\n\t.cell 38584980805374072516973655170256187011857510180269267528927996738978845818880\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "getApproved(uint256)": "081812fc",
            "initialize(string,string)": "4cd88b76",
            "isApprovedForAll(address,address)": "e985e9c5",
            "name()": "06fdde03",
            "ownerOf(uint256)": "6352211e",
            "safeTransferFrom(address,address,uint256)": "42842e0e",
            "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
            "setApprovalForAll(address,bool)": "a22cb465",
            "supportsInterface(bytes4)": "01ffc9a7",
            "symbol()": "95d89b41",
            "tokenURI(uint256)": "c87b56dd",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/forge-std/src/interfaces/IERC165.sol\", 1:\"lib/forge-std/src/interfaces/IERC721.sol\", 2:\"lib/forge-std/src/mocks/MockERC721.sol\"\nobject \"MockERC721_799\" {\n    code {\n        {\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MockERC721_799_deployed\")\n            codecopy(_1, dataoffset(\"MockERC721_799_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 2:\"lib/forge-std/src/mocks/MockERC721.sol\"\n    object \"MockERC721_799_deployed\" {\n        code {\n            {\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x06fdde03 { external_fun_name() }\n                    case 0x081812fc { external_fun_getApproved() }\n                    case 0x095ea7b3 { external_fun_approve() }\n                    case 0x23b872dd { external_fun_transferFrom() }\n                    case 0x42842e0e {\n                        external_fun_safeTransferFrom()\n                    }\n                    case 0x4cd88b76 { external_fun_initialize() }\n                    case 0x6352211e { external_fun_ownerOf() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x95d89b41 { external_fun_symbol() }\n                    case 0xa22cb465 {\n                        external_fun_setApprovalForAll()\n                    }\n                    case 0xb88d4fde {\n                        external_fun_safeTransferFrom_585()\n                    }\n                    case 0xc87b56dd { external_fun_tokenURI() }\n                    case 0xe985e9c5 {\n                        external_fun_isApprovedForAll()\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                /// @src 2:5462:5487  \"interfaceId == 0x01ffc9a7\"\n                let _1 := /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(/** @src 2:5462:5487  \"interfaceId == 0x01ffc9a7\" */ value, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ shl(224, 0xffffffff))\n                /// @src 2:5462:5562  \"interfaceId == 0x01ffc9a7 // ERC165 Interface ID for ERC165...\"\n                let expr := /** @src 2:5462:5487  \"interfaceId == 0x01ffc9a7\" */ eq(_1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ shl(224, 0x01ffc9a7))\n                /// @src 2:5462:5562  \"interfaceId == 0x01ffc9a7 // ERC165 Interface ID for ERC165...\"\n                if iszero(expr)\n                {\n                    expr := /** @src 2:5537:5562  \"interfaceId == 0x80ac58cd\" */ eq(_1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ shl(224, 0x80ac58cd))\n                }\n                /// @src 2:5462:5637  \"interfaceId == 0x01ffc9a7 // ERC165 Interface ID for ERC165...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 2:5612:5637  \"interfaceId == 0x5b5e139f\" */ eq(_1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ shl(224, 0x5b5e139f))\n                }\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(expr_1)))\n                return(memPos, 32)\n            }\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(pos, length), 0x20), 0)\n                }\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n            }\n            function external_fun_name()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(_1)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _2 := 0x20\n                let _3 := 1\n                switch and(slotValue, _3)\n                case 0 {\n                    mstore(add(memPtr, _2), and(slotValue, not(255)))\n                    ret := add(memPtr, 64)\n                }\n                case 1 {\n                    mstore(_1, _1)\n                    let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(add(memPtr, i), _2), sload(dataPos))\n                        dataPos := add(dataPos, _3)\n                    }\n                    ret := add(add(memPtr, i), _2)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function external_fun_getApproved()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ calldataload(4))\n                mstore(32, 4)\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n                let memPos := mload(0x40)\n                mstore(memPos, cleaned)\n                return(memPos, 32)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_4922() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_approve()\n            {\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value0 := abi_decode_address()\n                let value1 := calldataload(36)\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ value1)\n                mstore(32, /** @src 2:3210:3218  \"_ownerOf\" */ 0x02)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let _2 := sub(shl(160, 1), 1)\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 64)), _2)\n                /// @src 2:3241:3300  \"msg.sender == owner || _isApprovedForAll[owner][msg.sender]\"\n                let expr := /** @src 2:3241:3260  \"msg.sender == owner\" */ eq(/** @src 2:3241:3251  \"msg.sender\" */ caller(), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ cleaned)\n                /// @src 2:3241:3300  \"msg.sender == owner || _isApprovedForAll[owner][msg.sender]\"\n                if iszero(expr)\n                {\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ cleaned)\n                    mstore(32, /** @src 2:3264:3281  \"_isApprovedForAll\" */ 0x05)\n                    /// @src 2:3241:3300  \"msg.sender == owner || _isApprovedForAll[owner][msg.sender]\"\n                    expr := /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(sload(/** @src 2:3264:3300  \"_isApprovedForAll[owner][msg.sender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 64), /** @src 2:3241:3251  \"msg.sender\" */ caller())), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 0xff)\n                }\n                /// @src 2:3233:3319  \"require(msg.sender == owner || _isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\")\"\n                require_helper_stringliteral_e7e2(expr)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ value1)\n                mstore(32, 4)\n                /// @src 2:3330:3356  \"_getApproved[id] = spender\"\n                update_storage_value_offsett_address_to_address(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 64), /** @src 2:3330:3356  \"_getApproved[id] = spender\" */ value0)\n                /// @src 2:3372:3400  \"Approval(owner, spender, id)\"\n                let _3 := /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ mload(64)\n                /// @src 2:3372:3400  \"Approval(owner, spender, id)\"\n                log4(_3, /** @src -1:-1:-1 */ _1, /** @src 2:3372:3400  \"Approval(owner, spender, id)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, cleaned, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(/** @src 2:3372:3400  \"Approval(owner, spender, id)\" */ value0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _2), /** @src 2:3372:3400  \"Approval(owner, spender, id)\" */ value1)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                return(_3, /** @src -1:-1:-1 */ _1)\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function external_fun_transferFrom()\n            {\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                fun_transferFrom(param, param_1, param_2)\n                return(mload(64), 0)\n            }\n            function external_fun_safeTransferFrom()\n            {\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                /// @src 2:4460:4462  \"id\"\n                fun_transferFrom(param, param_1, param_2)\n                /// @src 2:4495:4668  \"!_isContract(to)...\"\n                let expr := /** @src 2:7856:7870  \"codeLength > 0\" */ iszero(/** @src 2:7774:7839  \"assembly {...\" */ extcodesize(/** @src 2:4496:4511  \"_isContract(to)\" */ param_1))\n                /// @src 2:4495:4668  \"!_isContract(to)...\"\n                if /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ iszero(expr)\n                /// @src 2:4495:4668  \"!_isContract(to)...\"\n                {\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    let _1 := sub(shl(160, 1), 1)\n                    /// @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                    let _2 := /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                    mstore(_2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _3)\n                    mstore(/** @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ add(_2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 4), /** @src 2:4573:4583  \"msg.sender\" */ caller())\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    mstore(add(/** @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 36), and(param, _1))\n                    mstore(add(/** @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 68), param_2)\n                    mstore(add(/** @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 100), 128)\n                    mstore(add(/** @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 132), /** @src -1:-1:-1 */ 0)\n                    /// @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                    let _4 := call(gas(), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(/** @src 2:4531:4555  \"IERC721TokenReceiver(to)\" */ param_1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _1), /** @src -1:-1:-1 */ 0, /** @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 164, /** @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _2, 32)\n                    if iszero(_4) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 2:4531:4598  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                    if _4\n                    {\n                        let _5 := 32\n                        if gt(_5, returndatasize()) { _5 := returndatasize() }\n                        finalize_allocation(_2, _5)\n                        expr_1 := abi_decode_bytes4_fromMemory(_2, add(_2, _5))\n                    }\n                    /// @src 2:4495:4668  \"!_isContract(to)...\"\n                    expr := /** @src 2:4531:4668  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")...\" */ eq(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(/** @src 2:4531:4668  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")...\" */ expr_1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ shl(224, 0xffffffff)), _3)\n                }\n                /// @src 2:4474:4710  \"require(...\"\n                require_helper_stringliteral_91ac(expr)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n            }\n            function external_fun_initialize()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value0 := abi_decode_string(add(4, offset), calldatasize())\n                let offset_1 := calldataload(36)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value1 := abi_decode_string(add(4, offset_1), calldatasize())\n                if iszero(/** @src 2:2795:2807  \"!initialized\" */ iszero(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(sload(/** @src 2:2796:2807  \"initialized\" */ 0x06), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 0xff)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 19)\n                    mstore(add(memPtr, 68), \"ALREADY_INITIALIZED\")\n                    revert(memPtr, 100)\n                }\n                let newLen := mload(value0)\n                if gt(newLen, _1) { panic_error_0x41() }\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                clean_up_bytearray_end_slots_string_storage_4914(extract_byte_array_length(sload(/** @src -1:-1:-1 */ _2)), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ newLen)\n                let srcOffset := /** @src -1:-1:-1 */ _2\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let srcOffset_1 := 32\n                srcOffset := srcOffset_1\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    let dstPtr := array_dataslot_string_storage_4915()\n                    let i := /** @src -1:-1:-1 */ _2\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                    {\n                        sstore(dstPtr, mload(add(value0, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, srcOffset_1)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(value0, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(/** @src -1:-1:-1 */ _2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ _2\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    if newLen\n                    {\n                        value := mload(add(value0, srcOffset))\n                    }\n                    sstore(/** @src -1:-1:-1 */ _2, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n                copy_byte_array_to_storage_from_string_to_string(value1)\n                /// @src 2:2893:2911  \"initialized = true\"\n                update_storage_value_offsett_bool_to_bool()\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                return(mload(64), /** @src -1:-1:-1 */ _2)\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function external_fun_ownerOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ calldataload(4))\n                mstore(32, /** @src 2:1367:1375  \"_ownerOf\" */ 0x02)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n                if /** @src 2:1358:1394  \"(owner = _ownerOf[id]) != address(0)\" */ iszero(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ cleaned)\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 10)\n                    mstore(add(memPtr, 68), \"NOT_MINTED\")\n                    revert(memPtr, 100)\n                }\n                let memPos := mload(0x40)\n                mstore(memPos, cleaned)\n                return(memPos, 32)\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let _1 := and(abi_decode_address(), sub(shl(160, 1), 1))\n                if /** @src 2:1521:1540  \"owner != address(0)\" */ iszero(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 12)\n                    mstore(add(memPtr, 68), \"ZERO_ADDRESS\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _1)\n                mstore(32, /** @src 2:1575:1585  \"_balanceOf\" */ 0x03)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let _2 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, _2)\n                return(memPos, 32)\n            }\n            function external_fun_symbol()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                /// @src 2:851:858  \"_symbol\"\n                let _2 := 0x01\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let slotValue := sload(/** @src 2:851:858  \"_symbol\" */ _2)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _3 := 0x20\n                switch and(slotValue, /** @src 2:851:858  \"_symbol\" */ _2)\n                case /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 0 {\n                    mstore(add(memPtr, _3), and(slotValue, not(255)))\n                    ret := add(memPtr, 64)\n                }\n                case 1 {\n                    mstore(_1, /** @src 2:851:858  \"_symbol\" */ _2)\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(add(memPtr, i), _3), sload(dataPos))\n                        dataPos := add(dataPos, /** @src 2:851:858  \"_symbol\" */ _2)\n                    }\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    ret := add(add(memPtr, i), _3)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_setApprovalForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value0 := abi_decode_address()\n                let value := calldataload(36)\n                let _1 := iszero(iszero(value))\n                if iszero(eq(value, _1))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:3525:3535  \"msg.sender\" */ caller())\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                mstore(32, /** @src 2:3507:3524  \"_isApprovedForAll\" */ 0x05)\n                /// @src 2:3507:3546  \"_isApprovedForAll[msg.sender][operator]\"\n                let _2 := mapping_index_access_mapping_address_uint256_of_address(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 64), /** @src 2:3507:3546  \"_isApprovedForAll[msg.sender][operator]\" */ value0)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value_1 := and(sload(_2), not(255))\n                sstore(_2, or(value_1, and(_1, 255)))\n                /// @src 2:3573:3619  \"ApprovalForAll(msg.sender, operator, approved)\"\n                let _3 := /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ mload(64)\n                mstore(_3, _1)\n                /// @src 2:3573:3619  \"ApprovalForAll(msg.sender, operator, approved)\"\n                log3(_3, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 32, /** @src 2:3573:3619  \"ApprovalForAll(msg.sender, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 2:3525:3535  \"msg.sender\" */ caller(), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(/** @src 2:3573:3619  \"ApprovalForAll(msg.sender, operator, approved)\" */ value0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ sub(shl(160, 1), 1)))\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function external_fun_safeTransferFrom_585()\n            {\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_4922()\n                let value2 := calldataload(68)\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let array := abi_decode_available_length_string(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                /// @src 2:4907:4909  \"id\"\n                fun_transferFrom(value0, value1, value2)\n                /// @src 2:4942:5117  \"!_isContract(to)...\"\n                let expr := /** @src 2:4942:4958  \"!_isContract(to)\" */ cleanup_bool(/** @src 2:7856:7870  \"codeLength > 0\" */ iszero(/** @src 2:7774:7839  \"assembly {...\" */ extcodesize(/** @src 2:4943:4958  \"_isContract(to)\" */ value1)))\n                /// @src 2:4942:5117  \"!_isContract(to)...\"\n                if iszero(expr)\n                {\n                    /// @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                    let _1 := /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ mload(64)\n                    let _2 := shl(225, 0x0a85bd01)\n                    /// @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                    mstore(_1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _2)\n                    /// @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                    let _3 := call(gas(), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(/** @src 2:4978:5002  \"IERC721TokenReceiver(to)\" */ value1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ sub(shl(160, 1), 1)), /** @src -1:-1:-1 */ 0, /** @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ _1, sub(abi_encode_address_address_uint256_bytes(add(_1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 4), /** @src 2:5020:5030  \"msg.sender\" */ caller(), /** @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ value0, value2, array), _1), _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 32)\n                    /// @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                    if iszero(_3) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                    if _3\n                    {\n                        let _4 := /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 32\n                        /// @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                        if gt(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _4, /** @src 2:4978:5047  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        expr_1 := abi_decode_bytes4_fromMemory(_1, add(_1, _4))\n                    }\n                    /// @src 2:4942:5117  \"!_isContract(to)...\"\n                    expr := /** @src 2:4978:5117  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)...\" */ eq(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(/** @src 2:4978:5117  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)...\" */ expr_1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ shl(224, 0xffffffff)), _2)\n                }\n                /// @src 2:4921:5159  \"require(...\"\n                require_helper_stringliteral_91ac(expr)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function external_fun_tokenURI()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 32\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let _2 := 64\n                let memPos := mload(_2)\n                mstore(memPos, _1)\n                let length := mload(96)\n                mstore(add(memPos, _1), length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(memPos, i), _2), mload(add(i, 128)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(memPos, length), _2), /** @src -1:-1:-1 */ 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                return(memPos, add(sub(add(memPos, and(add(length, 31), not(31))), memPos), _2))\n            }\n            function external_fun_isApprovedForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_4922()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 2:2173:2190  \"_isApprovedForAll\" */ 0x05)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let value := and(sload(/** @src 2:2173:2207  \"_isApprovedForAll[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function array_dataslot_string_storage_4915() -> data\n            {\n                mstore(/** @src 2:2842:2855  \"_name = name_\" */ 0x00, 0x00)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                data := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 2:2865:2882  \"_symbol = symbol_\" */ 0x01)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                data := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n            }\n            function mapping_index_access_mapping_uint256_address_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 2:3750:3758  \"_ownerOf\" */ 0x02)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_address_of_uint256_4935(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 2:3941:3953  \"_getApproved\" */ 0x04)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function read_from_storage_split_offset_address(slot) -> value\n            {\n                value := and(sload(slot), sub(shl(160, 1), 1))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_4934(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 2:3888:3905  \"_isApprovedForAll\" */ 0x05)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_4936(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 2:4173:4183  \"_balanceOf\" */ 0x03)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            function clean_up_bytearray_end_slots_string_storage_4914(len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src 2:2842:2855  \"_name = name_\"\n                    let _1 := 0x00\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    mstore(/** @src 2:2842:2855  \"_name = name_\" */ _1, _1)\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    let _2 := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                    let deleteStart := add(_2, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := _2 }\n                    let _3 := add(_2, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _3) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src 2:2842:2855  \"_name = name_\" */ _1)\n                    }\n                }\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src 2:2865:2882  \"_symbol = symbol_\"\n                    let _1 := 0x01\n                    /// @src -1:-1:-1\n                    let _2 := 0\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    mstore(/** @src -1:-1:-1 */ _2, /** @src 2:2865:2882  \"_symbol = symbol_\" */ _1)\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    let _3 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                    let deleteStart := add(_3, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := _3 }\n                    let _4 := add(_3, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { }\n                    lt(start, _4)\n                    {\n                        start := add(start, /** @src 2:2865:2882  \"_symbol = symbol_\" */ _1)\n                    }\n                    /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _2)\n                    }\n                }\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function copy_byte_array_to_storage_from_string_to_string(src)\n            {\n                let newLen := mload(src)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                /// @src 2:2865:2882  \"_symbol = symbol_\"\n                let _1 := 0x01\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 2:2865:2882  \"_symbol = symbol_\" */ _1)), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ newLen)\n                let srcOffset := 0\n                let srcOffset_1 := 0x20\n                srcOffset := srcOffset_1\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    let dstPtr := array_dataslot_string_storage()\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                    {\n                        sstore(dstPtr, mload(add(src, srcOffset)))\n                        dstPtr := add(dstPtr, /** @src 2:2865:2882  \"_symbol = symbol_\" */ _1)\n                        /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                        srcOffset := add(srcOffset, srcOffset_1)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(src, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(/** @src 2:2865:2882  \"_symbol = symbol_\" */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ add(shl(/** @src 2:2865:2882  \"_symbol = symbol_\" */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ newLen), /** @src 2:2865:2882  \"_symbol = symbol_\" */ _1))\n                }\n                default /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(src, srcOffset))\n                    }\n                    sstore(/** @src 2:2865:2882  \"_symbol = symbol_\" */ _1, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n            }\n            function update_storage_value_offsett_bool_to_bool()\n            {\n                sstore(/** @src 2:2796:2807  \"initialized\" */ 0x06, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ or(and(sload(/** @src 2:2796:2807  \"initialized\" */ 0x06), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ not(255)), /** @src 2:2865:2882  \"_symbol = symbol_\" */ 0x01))\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function require_helper_stringliteral_e7e2(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 14)\n                    mstore(add(memPtr, 68), \"NOT_AUTHORIZED\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function require_helper_stringliteral_5e7b(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"INVALID_RECIPIENT\")\n                    revert(memPtr, 100)\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function decrement_uint256(value) -> ret\n            {\n                if iszero(value) { panic_error_0x11() }\n                ret := add(value, not(0))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function update_storage_value_address_to_address(slot)\n            {\n                sstore(slot, and(sload(slot), shl(160, 0xffffffffffffffffffffffff)))\n            }\n            /// @ast-id 503 @src 2:3632:4325  \"function transferFrom(address from, address to, uint256 id) public payable virtual override {...\"\n            function fun_transferFrom(var_from, var_to, var_id)\n            {\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(sload(/** @src 2:3750:3762  \"_ownerOf[id]\" */ mapping_index_access_mapping_uint256_address_of_uint256(var_id)), /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _1)\n                /// @src 2:3742:3762  \"from == _ownerOf[id]\"\n                let _3 := /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ and(/** @src 2:3742:3762  \"from == _ownerOf[id]\" */ var_from, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _1)\n                if iszero(/** @src 2:3742:3762  \"from == _ownerOf[id]\" */ eq(_3, _2))\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 10)\n                    mstore(add(memPtr, 68), \"WRONG_FROM\")\n                    revert(memPtr, 100)\n                }\n                let _4 := and(/** @src 2:3796:3812  \"to != address(0)\" */ var_to, /** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _1)\n                /// @src 2:3788:3834  \"require(to != address(0), \\\"INVALID_RECIPIENT\\\")\"\n                require_helper_stringliteral_5e7b(/** @src 2:3796:3812  \"to != address(0)\" */ iszero(iszero(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ _4)))\n                /// @src 2:3866:3923  \"msg.sender == from || _isApprovedForAll[from][msg.sender]\"\n                let expr := /** @src 2:3866:3884  \"msg.sender == from\" */ eq(/** @src 2:3866:3876  \"msg.sender\" */ caller(), /** @src 2:3866:3884  \"msg.sender == from\" */ _3)\n                /// @src 2:3866:3923  \"msg.sender == from || _isApprovedForAll[from][msg.sender]\"\n                if iszero(expr)\n                {\n                    expr := /** @src 2:3888:3923  \"_isApprovedForAll[from][msg.sender]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_uint256_of_address(/** @src 2:3888:3911  \"_isApprovedForAll[from]\" */ mapping_index_access_mapping_address_uint256_of_address_4934(var_from), /** @src 2:3866:3876  \"msg.sender\" */ caller()))\n                }\n                /// @src 2:3866:3957  \"msg.sender == from || _isApprovedForAll[from][msg.sender] || msg.sender == _getApproved[id]\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 2:3927:3957  \"msg.sender == _getApproved[id]\" */ eq(/** @src 2:3866:3876  \"msg.sender\" */ caller(), /** @src 2:3927:3957  \"msg.sender == _getApproved[id]\" */ cleanup_address(/** @src 2:3941:3957  \"_getApproved[id]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_uint256_address_of_uint256_4935(var_id))))\n                }\n                /// @src 2:3845:3997  \"require(...\"\n                require_helper_stringliteral_e7e2(expr_1)\n                /// @src 2:4173:4189  \"_balanceOf[from]\"\n                let _5 := mapping_index_access_mapping_address_uint256_of_address_4936(var_from)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                sstore(_5, /** @src 2:4173:4191  \"_balanceOf[from]--\" */ decrement_uint256(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ sload(/** @src 2:4173:4191  \"_balanceOf[from]--\" */ _5)))\n                /// @src 2:4202:4216  \"_balanceOf[to]\"\n                let _6 := mapping_index_access_mapping_address_uint256_of_address_4936(var_to)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                sstore(_6, /** @src 2:4202:4218  \"_balanceOf[to]++\" */ increment_uint256(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ sload(/** @src 2:4202:4218  \"_balanceOf[to]++\" */ _6)))\n                /// @src 2:4229:4246  \"_ownerOf[id] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 2:4229:4241  \"_ownerOf[id]\" */ mapping_index_access_mapping_uint256_address_of_uint256(var_id), /** @src 2:4229:4246  \"_ownerOf[id] = to\" */ var_to)\n                /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n                update_storage_value_address_to_address(/** @src 2:4264:4280  \"_getApproved[id]\" */ mapping_index_access_mapping_uint256_address_of_uint256_4935(var_id))\n                /// @src 2:4296:4318  \"Transfer(from, to, id)\"\n                log4(/** @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 2:4296:4318  \"Transfer(from, to, id)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _3, _4, var_id)\n            }\n            /// @src 2:381:7879  \"contract MockERC721 is IERC721Metadata {...\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function require_helper_stringliteral_91ac(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"UNSAFE_RECIPIENT\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209596d48e4d14b59e38a695ea39fcab0325f61747e78323c6814d65372ec48e1164736f6c634300080d0033\"\n    }\n}\n",
        "hash": "0100022f6f2e278b292c70cfeffece1f9a903cfbe7581040adb5a11b5046faf7",
        "factoryDependencies": {}
      }
    }
  },
  "sources": {
    "lib/forge-std/src/interfaces/IERC165.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "lib/forge-std/src/interfaces/IERC165.sol",
        "exportedSymbols": {
          "IERC165": [
            10
          ]
        },
        "id": 11,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:24:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IERC165",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 10,
            "linearizedBaseContracts": [
              10
            ],
            "name": "IERC165",
            "nameLocation": "68:7:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 2,
                  "nodeType": "StructuredDocumentation",
                  "src": "82:371:0",
                  "text": "@notice Query if a contract implements an interface\n @param interfaceID The interface identifier, as specified in ERC-165\n @dev Interface identification is specified in ERC-165. This function\n uses less than 30,000 gas.\n @return `true` if the contract implements `interfaceID` and\n `interfaceID` is not 0xffffffff, `false` otherwise"
                },
                "functionSelector": "01ffc9a7",
                "id": 9,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "supportsInterface",
                "nameLocation": "467:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 5,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 4,
                      "mutability": "mutable",
                      "name": "interfaceID",
                      "nameLocation": "492:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 9,
                      "src": "485:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 3,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "485:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "484:20:0"
                },
                "returnParameters": {
                  "id": 8,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 7,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 9,
                      "src": "528:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "528:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "527:6:0"
                },
                "scope": 10,
                "src": "458:76:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 11,
            "src": "58:478:0",
            "usedErrors": []
          }
        ],
        "src": "32:505:0"
      }
    },
    "lib/forge-std/src/interfaces/IERC721.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "lib/forge-std/src/interfaces/IERC721.sol",
        "exportedSymbols": {
          "IERC165": [
            10
          ],
          "IERC721": [
            126
          ],
          "IERC721Enumerable": [
            194
          ],
          "IERC721Metadata": [
            166
          ],
          "IERC721TokenReceiver": [
            142
          ]
        },
        "id": 195,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 12,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:24:1"
          },
          {
            "absolutePath": "lib/forge-std/src/interfaces/IERC165.sol",
            "file": "./IERC165.sol",
            "id": 13,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 195,
            "sourceUnit": 11,
            "src": "58:23:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 15,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10,
                  "src": "270:7:1"
                },
                "id": 16,
                "nodeType": "InheritanceSpecifier",
                "src": "270:7:1"
              }
            ],
            "canonicalName": "IERC721",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 14,
              "nodeType": "StructuredDocumentation",
              "src": "83:166:1",
              "text": "@title ERC-721 Non-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-721\n Note: the ERC-165 identifier for this interface is 0x80ac58cd."
            },
            "fullyImplemented": false,
            "id": 126,
            "linearizedBaseContracts": [
              126,
              10
            ],
            "name": "IERC721",
            "nameLocation": "259:7:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "documentation": {
                  "id": 17,
                  "nodeType": "StructuredDocumentation",
                  "src": "284:384:1",
                  "text": "@dev This emits when ownership of any NFT changes by any mechanism.\n This event emits when NFTs are created (`from` == 0) and destroyed\n (`to` == 0). Exception: during contract creation, any number of NFTs\n may be created and assigned without emitting Transfer. At the time of\n any transfer, the approved address for that NFT (if any) is reset to none."
                },
                "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                "id": 25,
                "name": "Transfer",
                "nameLocation": "679:8:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 24,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 19,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_from",
                      "nameLocation": "704:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "688:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "688:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_to",
                      "nameLocation": "727:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "711:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 20,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "711:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "748:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "732:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "732:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "687:70:1"
                },
                "src": "673:85:1"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 26,
                  "nodeType": "StructuredDocumentation",
                  "src": "764:278:1",
                  "text": "@dev This emits when the approved address for an NFT is changed or\n reaffirmed. The zero address indicates there is no approved address.\n When a Transfer event emits, this also indicates that the approved\n address for that NFT (if any) is reset to none."
                },
                "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                "id": 34,
                "name": "Approval",
                "nameLocation": "1053:8:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 33,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 28,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "1078:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "1062:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1062:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_approved",
                      "nameLocation": "1102:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "1086:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1086:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 32,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "1129:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "1113:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1113:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1061:77:1"
                },
                "src": "1047:92:1"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 35,
                  "nodeType": "StructuredDocumentation",
                  "src": "1145:128:1",
                  "text": "@dev This emits when an operator is enabled or disabled for an owner.\n The operator can manage all NFTs of the owner."
                },
                "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                "id": 43,
                "name": "ApprovalForAll",
                "nameLocation": "1284:14:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 42,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 37,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "1315:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "1299:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_operator",
                      "nameLocation": "1339:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "1323:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1323:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_approved",
                      "nameLocation": "1355:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "1350:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 40,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1350:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1298:67:1"
                },
                "src": "1278:88:1"
              },
              {
                "documentation": {
                  "id": 44,
                  "nodeType": "StructuredDocumentation",
                  "src": "1372:318:1",
                  "text": "@notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
                },
                "functionSelector": "70a08231",
                "id": 51,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "1704:9:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 47,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 46,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "1722:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 51,
                      "src": "1714:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 45,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1714:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1713:16:1"
                },
                "returnParameters": {
                  "id": 50,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 49,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 51,
                      "src": "1753:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1753:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1752:9:1"
                },
                "scope": 126,
                "src": "1695:67:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 52,
                  "nodeType": "StructuredDocumentation",
                  "src": "1768:246:1",
                  "text": "@notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
                },
                "functionSelector": "6352211e",
                "id": 59,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "ownerOf",
                "nameLocation": "2028:7:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 55,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 54,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "2044:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "2036:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2036:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2035:18:1"
                },
                "returnParameters": {
                  "id": 58,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 57,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "2077:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 56,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2077:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2076:9:1"
                },
                "scope": 126,
                "src": "2019:67:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 60,
                  "nodeType": "StructuredDocumentation",
                  "src": "2092:834:1",
                  "text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT. When transfer is complete, this function\n checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
                },
                "functionSelector": "b88d4fde",
                "id": 71,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "safeTransferFrom",
                "nameLocation": "2940:16:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 69,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 62,
                      "mutability": "mutable",
                      "name": "_from",
                      "nameLocation": "2965:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "2957:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 61,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2957:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 64,
                      "mutability": "mutable",
                      "name": "_to",
                      "nameLocation": "2980:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "2972:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2972:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "2993:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "2985:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2985:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3018:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "3003:19:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 67,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3003:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2956:67:1"
                },
                "returnParameters": {
                  "id": 70,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3040:0:1"
                },
                "scope": 126,
                "src": "2931:110:1",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 72,
                  "nodeType": "StructuredDocumentation",
                  "src": "3047:347:1",
                  "text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n except this function just sets data to \"\".\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
                },
                "functionSelector": "42842e0e",
                "id": 81,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "safeTransferFrom",
                "nameLocation": "3408:16:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 79,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "_from",
                      "nameLocation": "3433:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "3425:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3425:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76,
                      "mutability": "mutable",
                      "name": "_to",
                      "nameLocation": "3448:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "3440:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3440:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "3461:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "3453:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3453:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3424:46:1"
                },
                "returnParameters": {
                  "id": 80,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3487:0:1"
                },
                "scope": 126,
                "src": "3399:89:1",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 82,
                  "nodeType": "StructuredDocumentation",
                  "src": "3494:570:1",
                  "text": "@notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
                },
                "functionSelector": "23b872dd",
                "id": 91,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "4078:12:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 89,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "_from",
                      "nameLocation": "4099:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "4091:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4091:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "_to",
                      "nameLocation": "4114:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "4106:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4106:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "4127:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "4119:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4119:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4090:46:1"
                },
                "returnParameters": {
                  "id": 90,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4153:0:1"
                },
                "scope": 126,
                "src": "4069:85:1",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 92,
                  "nodeType": "StructuredDocumentation",
                  "src": "4160:349:1",
                  "text": "@notice Change or reaffirm the approved address for an NFT\n @dev The zero address indicates there is no approved address.\n Throws unless `msg.sender` is the current NFT owner, or an authorized\n operator of the current owner.\n @param _approved The new approved NFT controller\n @param _tokenId The NFT to approve"
                },
                "functionSelector": "095ea7b3",
                "id": 99,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "4523:7:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 97,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "_approved",
                      "nameLocation": "4539:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 99,
                      "src": "4531:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4531:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 96,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "4558:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 99,
                      "src": "4550:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 95,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4550:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4530:37:1"
                },
                "returnParameters": {
                  "id": 98,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4584:0:1"
                },
                "scope": 126,
                "src": "4514:71:1",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 100,
                  "nodeType": "StructuredDocumentation",
                  "src": "4591:382:1",
                  "text": "@notice Enable or disable approval for a third party (\"operator\") to manage\n all of `msg.sender`'s assets\n @dev Emits the ApprovalForAll event. The contract MUST allow\n multiple operators per owner.\n @param _operator Address to add to the set of authorized operators\n @param _approved True if the operator is approved, false to revoke approval"
                },
                "functionSelector": "a22cb465",
                "id": 107,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "setApprovalForAll",
                "nameLocation": "4987:17:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 105,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "_operator",
                      "nameLocation": "5013:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 107,
                      "src": "5005:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5005:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 104,
                      "mutability": "mutable",
                      "name": "_approved",
                      "nameLocation": "5029:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 107,
                      "src": "5024:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5024:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5004:35:1"
                },
                "returnParameters": {
                  "id": 106,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5048:0:1"
                },
                "scope": 126,
                "src": "4978:71:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 108,
                  "nodeType": "StructuredDocumentation",
                  "src": "5055:260:1",
                  "text": "@notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT.\n @param _tokenId The NFT to find the approved address for\n @return The approved address for this NFT, or the zero address if there is none"
                },
                "functionSelector": "081812fc",
                "id": 115,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "getApproved",
                "nameLocation": "5329:11:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 111,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 110,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "5349:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 115,
                      "src": "5341:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 109,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5341:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5340:18:1"
                },
                "returnParameters": {
                  "id": 114,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 113,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 115,
                      "src": "5382:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 112,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5382:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5381:9:1"
                },
                "scope": 126,
                "src": "5320:71:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 116,
                  "nodeType": "StructuredDocumentation",
                  "src": "5397:290:1",
                  "text": "@notice Query if an address is an authorized operator for another address\n @param _owner The address that owns the NFTs\n @param _operator The address that acts on behalf of the owner\n @return True if `_operator` is an approved operator for `_owner`, false otherwise"
                },
                "functionSelector": "e985e9c5",
                "id": 125,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "isApprovedForAll",
                "nameLocation": "5701:16:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 121,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "5726:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "5718:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5718:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 120,
                      "mutability": "mutable",
                      "name": "_operator",
                      "nameLocation": "5742:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "5734:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 119,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5734:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5717:35:1"
                },
                "returnParameters": {
                  "id": 124,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 123,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "5776:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 122,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5776:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5775:6:1"
                },
                "scope": 126,
                "src": "5692:90:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 195,
            "src": "249:5535:1",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IERC721TokenReceiver",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 127,
              "nodeType": "StructuredDocumentation",
              "src": "5786:72:1",
              "text": "@dev Note: the ERC-165 identifier for this interface is 0x150b7a02."
            },
            "fullyImplemented": false,
            "id": 142,
            "linearizedBaseContracts": [
              142
            ],
            "name": "IERC721TokenReceiver",
            "nameLocation": "5868:20:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 128,
                  "nodeType": "StructuredDocumentation",
                  "src": "5895:756:1",
                  "text": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n after a `transfer`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the contract address is always the message sender.\n @param _operator The address which called `safeTransferFrom` function\n @param _from The address which previously owned the token\n @param _tokenId The NFT identifier which is being transferred\n @param _data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n  unless throwing"
                },
                "functionSelector": "150b7a02",
                "id": 141,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "onERC721Received",
                "nameLocation": "6665:16:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 137,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 130,
                      "mutability": "mutable",
                      "name": "_operator",
                      "nameLocation": "6690:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 141,
                      "src": "6682:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 129,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6682:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "_from",
                      "nameLocation": "6709:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 141,
                      "src": "6701:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6701:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "6724:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 141,
                      "src": "6716:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6716:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 136,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "6749:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 141,
                      "src": "6734:20:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6734:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6681:74:1"
                },
                "returnParameters": {
                  "id": 140,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 139,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 141,
                      "src": "6790:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 138,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "6790:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6789:8:1"
                },
                "scope": 142,
                "src": "6656:142:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 195,
            "src": "5858:942:1",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 144,
                  "name": "IERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 126,
                  "src": "7026:7:1"
                },
                "id": 145,
                "nodeType": "InheritanceSpecifier",
                "src": "7026:7:1"
              }
            ],
            "canonicalName": "IERC721Metadata",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 143,
              "nodeType": "StructuredDocumentation",
              "src": "6802:195:1",
              "text": "@title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721\n Note: the ERC-165 identifier for this interface is 0x5b5e139f."
            },
            "fullyImplemented": false,
            "id": 166,
            "linearizedBaseContracts": [
              166,
              126,
              10
            ],
            "name": "IERC721Metadata",
            "nameLocation": "7007:15:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 146,
                  "nodeType": "StructuredDocumentation",
                  "src": "7040:72:1",
                  "text": "@notice A descriptive name for a collection of NFTs in this contract"
                },
                "functionSelector": "06fdde03",
                "id": 151,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nameLocation": "7126:4:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 147,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7130:2:1"
                },
                "returnParameters": {
                  "id": 150,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 149,
                      "mutability": "mutable",
                      "name": "_name",
                      "nameLocation": "7170:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "7156:19:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 148,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7156:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7155:21:1"
                },
                "scope": 166,
                "src": "7117:60:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 152,
                  "nodeType": "StructuredDocumentation",
                  "src": "7183:57:1",
                  "text": "@notice An abbreviated name for NFTs in this contract"
                },
                "functionSelector": "95d89b41",
                "id": 157,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nameLocation": "7254:6:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 153,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7260:2:1"
                },
                "returnParameters": {
                  "id": 156,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 155,
                      "mutability": "mutable",
                      "name": "_symbol",
                      "nameLocation": "7300:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "7286:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 154,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7286:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7285:23:1"
                },
                "scope": 166,
                "src": "7245:64:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 158,
                  "nodeType": "StructuredDocumentation",
                  "src": "7315:260:1",
                  "text": "@notice A distinct Uniform Resource Identifier (URI) for a given asset.\n @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n 3986. The URI may point to a JSON file that conforms to the \"ERC721\n Metadata JSON Schema\"."
                },
                "functionSelector": "c87b56dd",
                "id": 165,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "tokenURI",
                "nameLocation": "7589:8:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 161,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 160,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "7606:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 165,
                      "src": "7598:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7598:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7597:18:1"
                },
                "returnParameters": {
                  "id": 164,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 163,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 165,
                      "src": "7639:13:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 162,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7639:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7638:15:1"
                },
                "scope": 166,
                "src": "7580:74:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 195,
            "src": "6997:659:1",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 168,
                  "name": "IERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 126,
                  "src": "7887:7:1"
                },
                "id": 169,
                "nodeType": "InheritanceSpecifier",
                "src": "7887:7:1"
              }
            ],
            "canonicalName": "IERC721Enumerable",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "7658:198:1",
              "text": "@title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721\n Note: the ERC-165 identifier for this interface is 0x780e9d63."
            },
            "fullyImplemented": false,
            "id": 194,
            "linearizedBaseContracts": [
              194,
              126,
              10
            ],
            "name": "IERC721Enumerable",
            "nameLocation": "7866:17:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 170,
                  "nodeType": "StructuredDocumentation",
                  "src": "7901:208:1",
                  "text": "@notice Count NFTs tracked by this contract\n @return A count of valid NFTs tracked by this contract, where each one of\n them has an assigned and queryable owner not equal to the zero address"
                },
                "functionSelector": "18160ddd",
                "id": 175,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nameLocation": "8123:11:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 171,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8134:2:1"
                },
                "returnParameters": {
                  "id": 174,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 173,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 175,
                      "src": "8160:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8160:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8159:9:1"
                },
                "scope": 194,
                "src": "8114:55:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 176,
                  "nodeType": "StructuredDocumentation",
                  "src": "8175:238:1",
                  "text": "@notice Enumerate valid NFTs\n @dev Throws if `_index` >= `totalSupply()`.\n @param _index A counter less than `totalSupply()`\n @return The token identifier for the `_index`th NFT,\n (sort order not specified)"
                },
                "functionSelector": "4f6ccce7",
                "id": 183,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "tokenByIndex",
                "nameLocation": "8427:12:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 179,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "_index",
                      "nameLocation": "8448:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "8440:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8440:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8439:16:1"
                },
                "returnParameters": {
                  "id": 182,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 181,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "8479:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 180,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8479:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8478:9:1"
                },
                "scope": 194,
                "src": "8418:70:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 184,
                  "nodeType": "StructuredDocumentation",
                  "src": "8494:431:1",
                  "text": "@notice Enumerate NFTs assigned to an owner\n @dev Throws if `_index` >= `balanceOf(_owner)` or if\n `_owner` is the zero address, representing invalid NFTs.\n @param _owner An address where we are interested in NFTs owned by them\n @param _index A counter less than `balanceOf(_owner)`\n @return The token identifier for the `_index`th NFT assigned to `_owner`,\n (sort order not specified)"
                },
                "functionSelector": "2f745c59",
                "id": 193,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "tokenOfOwnerByIndex",
                "nameLocation": "8939:19:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 189,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "8967:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "8959:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8959:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 188,
                      "mutability": "mutable",
                      "name": "_index",
                      "nameLocation": "8983:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "8975:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8975:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8958:32:1"
                },
                "returnParameters": {
                  "id": 192,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 191,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "9014:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9014:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9013:9:1"
                },
                "scope": 194,
                "src": "8930:93:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 195,
            "src": "7856:1169:1",
            "usedErrors": []
          }
        ],
        "src": "32:8994:1"
      }
    },
    "lib/forge-std/src/mocks/MockERC721.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "lib/forge-std/src/mocks/MockERC721.sol",
        "exportedSymbols": {
          "IERC721Metadata": [
            166
          ],
          "IERC721TokenReceiver": [
            813
          ],
          "MockERC721": [
            799
          ]
        },
        "id": 814,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 196,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".2",
              "<",
              "0.9",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:31:2"
          },
          {
            "absolutePath": "lib/forge-std/src/interfaces/IERC721.sol",
            "file": "../interfaces/IERC721.sol",
            "id": 198,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 814,
            "sourceUnit": 195,
            "src": "65:58:2",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 197,
                  "name": "IERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 166,
                  "src": "73:15:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 200,
                  "name": "IERC721Metadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 166,
                  "src": "404:15:2"
                },
                "id": 201,
                "nodeType": "InheritanceSpecifier",
                "src": "404:15:2"
              }
            ],
            "canonicalName": "MockERC721",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 199,
              "nodeType": "StructuredDocumentation",
              "src": "125:256:2",
              "text": "@notice This is a mock contract of the ERC721 standard for testing purposes only, it SHOULD NOT be used in production.\n @dev Forked from: https://github.com/transmissions11/solmate/blob/0384dbaaa4fcb5715738a9254a7c0a4cb62cf458/src/tokens/ERC721.sol"
            },
            "fullyImplemented": true,
            "id": 799,
            "linearizedBaseContracts": [
              799,
              166,
              126,
              10
            ],
            "name": "MockERC721",
            "nameLocation": "390:10:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 203,
                "mutability": "mutable",
                "name": "_name",
                "nameLocation": "629:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "613:21:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 202,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "613:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 205,
                "mutability": "mutable",
                "name": "_symbol",
                "nameLocation": "657:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "641:23:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 204,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "641:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  151
                ],
                "body": {
                  "id": 213,
                  "nodeType": "Block",
                  "src": "734:29:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 211,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "751:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "functionReturnParameters": 210,
                      "id": 212,
                      "nodeType": "Return",
                      "src": "744:12:2"
                    }
                  ]
                },
                "functionSelector": "06fdde03",
                "id": 214,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nameLocation": "680:4:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 207,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "701:8:2"
                },
                "parameters": {
                  "id": 206,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "684:2:2"
                },
                "returnParameters": {
                  "id": 210,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 209,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "719:13:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "719:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "718:15:2"
                },
                "scope": 799,
                "src": "671:92:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  157
                ],
                "body": {
                  "id": 222,
                  "nodeType": "Block",
                  "src": "834:31:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 220,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "851:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "functionReturnParameters": 219,
                      "id": 221,
                      "nodeType": "Return",
                      "src": "844:14:2"
                    }
                  ]
                },
                "functionSelector": "95d89b41",
                "id": 223,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nameLocation": "778:6:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 216,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "801:8:2"
                },
                "parameters": {
                  "id": 215,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "784:2:2"
                },
                "returnParameters": {
                  "id": 219,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 218,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "819:13:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 217,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "819:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "818:15:2"
                },
                "scope": 799,
                "src": "769:96:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  165
                ],
                "body": {
                  "id": 231,
                  "nodeType": "Block",
                  "src": "954:2:2",
                  "statements": []
                },
                "functionSelector": "c87b56dd",
                "id": 232,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "tokenURI",
                "nameLocation": "880:8:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 227,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "921:8:2"
                },
                "parameters": {
                  "id": 226,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 225,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "897:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "889:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "889:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "888:12:2"
                },
                "returnParameters": {
                  "id": 230,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 229,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "939:13:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 228,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "939:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "938:15:2"
                },
                "scope": 799,
                "src": "871:85:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 236,
                "mutability": "mutable",
                "name": "_ownerOf",
                "nameLocation": "1189:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1152:45:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "typeName": {
                  "id": 235,
                  "keyType": {
                    "id": 233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1152:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "valueType": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 240,
                "mutability": "mutable",
                "name": "_balanceOf",
                "nameLocation": "1241:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1204:47:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 239,
                  "keyType": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1204:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  59
                ],
                "body": {
                  "id": 263,
                  "nodeType": "Block",
                  "src": "1340:76:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "id": 253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 249,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 246,
                                    "src": "1359:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "baseExpression": {
                                      "id": 250,
                                      "name": "_ownerOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 236,
                                      "src": "1367:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                        "typeString": "mapping(uint256 => address)"
                                      }
                                    },
                                    "id": 252,
                                    "indexExpression": {
                                      "id": 251,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 242,
                                      "src": "1376:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1367:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1359:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 254,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1358:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1392:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1384:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 255,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1384:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1384:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1358:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4e4f545f4d494e544544",
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1396:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
                              "typeString": "literal_string \"NOT_MINTED\""
                            },
                            "value": "NOT_MINTED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
                              "typeString": "literal_string \"NOT_MINTED\""
                            }
                          ],
                          "id": 248,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1350:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1350:59:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 262,
                      "nodeType": "ExpressionStatement",
                      "src": "1350:59:2"
                    }
                  ]
                },
                "functionSelector": "6352211e",
                "id": 264,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "ownerOf",
                "nameLocation": "1267:7:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 244,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1307:8:2"
                },
                "parameters": {
                  "id": 243,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 242,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1283:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "1275:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1275:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1274:12:2"
                },
                "returnParameters": {
                  "id": 247,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 246,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1333:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "1325:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 245,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1325:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1324:15:2"
                },
                "scope": 799,
                "src": "1258:158:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  51
                ],
                "body": {
                  "id": 286,
                  "nodeType": "Block",
                  "src": "1503:96:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 273,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "1521:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1538:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1530:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 274,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1530:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1530:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1521:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "5a45524f5f41444452455353",
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1542:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
                              "typeString": "literal_string \"ZERO_ADDRESS\""
                            },
                            "value": "ZERO_ADDRESS"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
                              "typeString": "literal_string \"ZERO_ADDRESS\""
                            }
                          ],
                          "id": 272,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1513:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 281,
                      "nodeType": "ExpressionStatement",
                      "src": "1513:44:2"
                    },
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 282,
                          "name": "_balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "1575:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 284,
                        "indexExpression": {
                          "id": 283,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "1586:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1575:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 271,
                      "id": 285,
                      "nodeType": "Return",
                      "src": "1568:24:2"
                    }
                  ]
                },
                "functionSelector": "70a08231",
                "id": 287,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "1431:9:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 268,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1476:8:2"
                },
                "parameters": {
                  "id": 267,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1449:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 287,
                      "src": "1441:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1441:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1440:15:2"
                },
                "returnParameters": {
                  "id": 271,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 270,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 287,
                      "src": "1494:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 269,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1494:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1493:9:2"
                },
                "scope": 799,
                "src": "1422:177:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 291,
                "mutability": "mutable",
                "name": "_getApproved",
                "nameLocation": "1830:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1793:49:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "typeName": {
                  "id": 290,
                  "keyType": {
                    "id": 288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1793:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "valueType": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 297,
                "mutability": "mutable",
                "name": "_isApprovedForAll",
                "nameLocation": "1903:17:2",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "1849:71:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                  "typeString": "mapping(address => mapping(address => bool))"
                },
                "typeName": {
                  "id": 296,
                  "keyType": {
                    "id": 292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1849:44:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                    "typeString": "mapping(address => mapping(address => bool))"
                  },
                  "valueType": {
                    "id": 295,
                    "keyType": {
                      "id": 293,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1876:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1868:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 294,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1887:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  115
                ],
                "body": {
                  "id": 309,
                  "nodeType": "Block",
                  "src": "2007:40:2",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 305,
                          "name": "_getApproved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "2024:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 307,
                        "indexExpression": {
                          "id": 306,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 299,
                          "src": "2037:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2024:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 304,
                      "id": 308,
                      "nodeType": "Return",
                      "src": "2017:23:2"
                    }
                  ]
                },
                "functionSelector": "081812fc",
                "id": 310,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getApproved",
                "nameLocation": "1936:11:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 301,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1980:8:2"
                },
                "parameters": {
                  "id": 300,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 299,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1956:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 310,
                      "src": "1948:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 298,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1948:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1947:12:2"
                },
                "returnParameters": {
                  "id": 304,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 310,
                      "src": "1998:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1998:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1997:9:2"
                },
                "scope": 799,
                "src": "1927:120:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  125
                ],
                "body": {
                  "id": 326,
                  "nodeType": "Block",
                  "src": "2156:58:2",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 320,
                            "name": "_isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "2173:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(address => mapping(address => bool))"
                            }
                          },
                          "id": 322,
                          "indexExpression": {
                            "id": 321,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "2191:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2173:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 324,
                        "indexExpression": {
                          "id": 323,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "2198:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2173:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 319,
                      "id": 325,
                      "nodeType": "Return",
                      "src": "2166:41:2"
                    }
                  ]
                },
                "functionSelector": "e985e9c5",
                "id": 327,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isApprovedForAll",
                "nameLocation": "2062:16:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 316,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "2132:8:2"
                },
                "parameters": {
                  "id": 315,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 312,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2087:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "2079:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 311,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2079:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 314,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "2102:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "2094:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 313,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2094:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2078:33:2"
                },
                "returnParameters": {
                  "id": 319,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "2150:4:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2150:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2149:6:2"
                },
                "scope": 799,
                "src": "2053:161:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 328,
                  "nodeType": "StructuredDocumentation",
                  "src": "2401:67:2",
                  "text": "@dev A bool to track whether the contract has been initialized."
                },
                "id": 330,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "2486:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "2473:24:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 329,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2473:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "private"
              },
              {
                "body": {
                  "id": 356,
                  "nodeType": "Block",
                  "src": "2777:141:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2795:12:2",
                            "subExpression": {
                              "id": 339,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 330,
                              "src": "2796:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "414c52454144595f494e495449414c495a4544",
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2809:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_241395e6b20092ec3fd5dfc22ea70fc2615c08854b7fd10fb3028d965cf738f3",
                              "typeString": "literal_string \"ALREADY_INITIALIZED\""
                            },
                            "value": "ALREADY_INITIALIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_241395e6b20092ec3fd5dfc22ea70fc2615c08854b7fd10fb3028d965cf738f3",
                              "typeString": "literal_string \"ALREADY_INITIALIZED\""
                            }
                          ],
                          "id": 338,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2787:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2787:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 343,
                      "nodeType": "ExpressionStatement",
                      "src": "2787:44:2"
                    },
                    {
                      "expression": {
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 344,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "2842:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 345,
                          "name": "name_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 333,
                          "src": "2850:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "2842:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 347,
                      "nodeType": "ExpressionStatement",
                      "src": "2842:13:2"
                    },
                    {
                      "expression": {
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 348,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2865:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 349,
                          "name": "symbol_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "2875:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "2865:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 351,
                      "nodeType": "ExpressionStatement",
                      "src": "2865:17:2"
                    },
                    {
                      "expression": {
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 352,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "2893:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2907:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2893:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 355,
                      "nodeType": "ExpressionStatement",
                      "src": "2893:18:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 331,
                  "nodeType": "StructuredDocumentation",
                  "src": "2504:197:2",
                  "text": "@dev To hide constructor warnings across solc versions due to different constructor visibility requirements and\n syntaxes, we add an initialization function that can be called only once."
                },
                "functionSelector": "4cd88b76",
                "id": 357,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "initialize",
                "nameLocation": "2715:10:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 336,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 333,
                      "mutability": "mutable",
                      "name": "name_",
                      "nameLocation": "2740:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "2726:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 332,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2726:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "symbol_",
                      "nameLocation": "2761:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "2747:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2747:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2725:44:2"
                },
                "returnParameters": {
                  "id": 337,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2777:0:2"
                },
                "scope": 799,
                "src": "2706:212:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  99
                ],
                "body": {
                  "id": 398,
                  "nodeType": "Block",
                  "src": "3184:223:2",
                  "statements": [
                    {
                      "assignments": [
                        366
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 366,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "3202:5:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 398,
                          "src": "3194:13:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 365,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3194:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 370,
                      "initialValue": {
                        "baseExpression": {
                          "id": 367,
                          "name": "_ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "3210:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 369,
                        "indexExpression": {
                          "id": 368,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "3219:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3210:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3194:28:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 372,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3241:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3241:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 374,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 366,
                                "src": "3255:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3241:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 376,
                                  "name": "_isApprovedForAll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 297,
                                  "src": "3264:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                    "typeString": "mapping(address => mapping(address => bool))"
                                  }
                                },
                                "id": 378,
                                "indexExpression": {
                                  "id": 377,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 366,
                                  "src": "3282:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3264:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 381,
                              "indexExpression": {
                                "expression": {
                                  "id": 379,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3289:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3289:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3264:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3241:59:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4e4f545f415554484f52495a4544",
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3302:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            },
                            "value": "NOT_AUTHORIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            }
                          ],
                          "id": 371,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3233:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3233:86:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 385,
                      "nodeType": "ExpressionStatement",
                      "src": "3233:86:2"
                    },
                    {
                      "expression": {
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 386,
                            "name": "_getApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "3330:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 388,
                          "indexExpression": {
                            "id": 387,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "3343:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3330:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 389,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "3349:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3330:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 391,
                      "nodeType": "ExpressionStatement",
                      "src": "3330:26:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 393,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "3381:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 394,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "3388:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 395,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "3397:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 392,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "3372:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3372:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 397,
                      "nodeType": "EmitStatement",
                      "src": "3367:33:2"
                    }
                  ]
                },
                "functionSelector": "095ea7b3",
                "id": 399,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "3115:7:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 363,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3175:8:2"
                },
                "parameters": {
                  "id": 362,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "3131:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "3123:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3123:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 361,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "3148:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "3140:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3140:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3122:29:2"
                },
                "returnParameters": {
                  "id": 364,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3184:0:2"
                },
                "scope": 799,
                "src": "3106:301:2",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  107
                ],
                "body": {
                  "id": 423,
                  "nodeType": "Block",
                  "src": "3497:129:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 407,
                              "name": "_isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "3507:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 411,
                            "indexExpression": {
                              "expression": {
                                "id": 408,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3525:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3525:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3507:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 412,
                          "indexExpression": {
                            "id": 410,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "3537:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3507:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 413,
                          "name": "approved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "3549:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3507:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 415,
                      "nodeType": "ExpressionStatement",
                      "src": "3507:50:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 417,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3588:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3588:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 419,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "3600:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 420,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "3610:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 416,
                          "name": "ApprovalForAll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "3573:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,address,bool)"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3573:46:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 422,
                      "nodeType": "EmitStatement",
                      "src": "3568:51:2"
                    }
                  ]
                },
                "functionSelector": "a22cb465",
                "id": 424,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "setApprovalForAll",
                "nameLocation": "3422:17:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 405,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3488:8:2"
                },
                "parameters": {
                  "id": 404,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 401,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "3448:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "3440:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 400,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3440:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "approved",
                      "nameLocation": "3463:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "3458:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3458:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3439:33:2"
                },
                "returnParameters": {
                  "id": 406,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3497:0:2"
                },
                "scope": 799,
                "src": "3413:213:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  91
                ],
                "body": {
                  "id": 502,
                  "nodeType": "Block",
                  "src": "3724:601:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 435,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 426,
                              "src": "3742:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 436,
                                "name": "_ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "3750:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 438,
                              "indexExpression": {
                                "id": 437,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 430,
                                "src": "3759:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3750:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3742:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "57524f4e475f46524f4d",
                            "id": 440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3764:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93",
                              "typeString": "literal_string \"WRONG_FROM\""
                            },
                            "value": "WRONG_FROM"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93",
                              "typeString": "literal_string \"WRONG_FROM\""
                            }
                          ],
                          "id": 434,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3734:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3734:43:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 442,
                      "nodeType": "ExpressionStatement",
                      "src": "3734:43:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 444,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "3796:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3810:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3802:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 445,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3802:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3802:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3796:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "494e56414c49445f524543495049454e54",
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3814:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
                              "typeString": "literal_string \"INVALID_RECIPIENT\""
                            },
                            "value": "INVALID_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
                              "typeString": "literal_string \"INVALID_RECIPIENT\""
                            }
                          ],
                          "id": 443,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3788:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3788:46:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 452,
                      "nodeType": "ExpressionStatement",
                      "src": "3788:46:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 454,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3866:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3866:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 456,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "3880:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3866:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 458,
                                    "name": "_isApprovedForAll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 297,
                                    "src": "3888:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 460,
                                  "indexExpression": {
                                    "id": 459,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 426,
                                    "src": "3906:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3888:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 463,
                                "indexExpression": {
                                  "expression": {
                                    "id": 461,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3912:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3912:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3888:35:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3866:57:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 465,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3927:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3927:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 467,
                                  "name": "_getApproved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 291,
                                  "src": "3941:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 469,
                                "indexExpression": {
                                  "id": 468,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 430,
                                  "src": "3954:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3941:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3927:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3866:91:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4e4f545f415554484f52495a4544",
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3971:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            },
                            "value": "NOT_AUTHORIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            }
                          ],
                          "id": 453,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3845:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3845:152:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 474,
                      "nodeType": "ExpressionStatement",
                      "src": "3845:152:2"
                    },
                    {
                      "expression": {
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "--",
                        "prefix": false,
                        "src": "4173:18:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 475,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "4173:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 477,
                          "indexExpression": {
                            "id": 476,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "4184:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4173:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 479,
                      "nodeType": "ExpressionStatement",
                      "src": "4173:18:2"
                    },
                    {
                      "expression": {
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "4202:16:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 480,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "4202:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 482,
                          "indexExpression": {
                            "id": 481,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "4213:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4202:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 484,
                      "nodeType": "ExpressionStatement",
                      "src": "4202:16:2"
                    },
                    {
                      "expression": {
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 485,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "4229:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 487,
                          "indexExpression": {
                            "id": 486,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "4238:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4229:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 488,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 428,
                          "src": "4244:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4229:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 490,
                      "nodeType": "ExpressionStatement",
                      "src": "4229:17:2"
                    },
                    {
                      "expression": {
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "delete",
                        "prefix": true,
                        "src": "4257:23:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 491,
                            "name": "_getApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "4264:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "id": 492,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "4277:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4264:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 495,
                      "nodeType": "ExpressionStatement",
                      "src": "4257:23:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 497,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "4305:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 498,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "4311:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 499,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "4315:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 496,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "4296:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4296:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 501,
                      "nodeType": "EmitStatement",
                      "src": "4291:27:2"
                    }
                  ]
                },
                "functionSelector": "23b872dd",
                "id": 503,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "3641:12:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 432,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3715:8:2"
                },
                "parameters": {
                  "id": 431,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "3662:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "3654:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3654:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 428,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "3676:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "3668:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 427,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3668:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 430,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "3688:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "3680:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 429,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3680:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3653:38:2"
                },
                "returnParameters": {
                  "id": 433,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3724:0:2"
                },
                "scope": 799,
                "src": "3632:693:2",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  81
                ],
                "body": {
                  "id": 542,
                  "nodeType": "Block",
                  "src": "4427:290:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 514,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 505,
                            "src": "4450:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 515,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
                            "src": "4456:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 516,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "4460:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 513,
                          "name": "transferFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "4437:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4437:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 518,
                      "nodeType": "ExpressionStatement",
                      "src": "4437:26:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4495:16:2",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 521,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 507,
                                    "src": "4508:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 520,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 798,
                                  "src": "4496:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4496:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 528,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4573:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 529,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4573:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 530,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 505,
                                    "src": "4585:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 531,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 509,
                                    "src": "4591:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 532,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4595:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 525,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "4552:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 524,
                                      "name": "IERC721TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 813,
                                      "src": "4531:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$813_$",
                                        "typeString": "type(contract IERC721TokenReceiver)"
                                      }
                                    },
                                    "id": 526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4531:24:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721TokenReceiver_$813",
                                      "typeString": "contract IERC721TokenReceiver"
                                    }
                                  },
                                  "id": 527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 812,
                                  "src": "4531:41:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4531:67:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 534,
                                    "name": "IERC721TokenReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "4622:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$813_$",
                                      "typeString": "type(contract IERC721TokenReceiver)"
                                    }
                                  },
                                  "id": 535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 812,
                                  "src": "4622:37:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                  }
                                },
                                "id": 536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "4622:46:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "4531:137:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4495:173:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "554e534146455f524543495049454e54",
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4682:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            },
                            "value": "UNSAFE_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            }
                          ],
                          "id": 519,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4474:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4474:236:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 541,
                      "nodeType": "ExpressionStatement",
                      "src": "4474:236:2"
                    }
                  ]
                },
                "functionSelector": "42842e0e",
                "id": 543,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "safeTransferFrom",
                "nameLocation": "4340:16:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 511,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "4418:8:2"
                },
                "parameters": {
                  "id": 510,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 505,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4365:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 543,
                      "src": "4357:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 504,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4357:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 507,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4379:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 543,
                      "src": "4371:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 506,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4371:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 509,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "4391:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 543,
                      "src": "4383:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 508,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4383:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4356:38:2"
                },
                "returnParameters": {
                  "id": 512,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4427:0:2"
                },
                "scope": 799,
                "src": "4331:386:2",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  71
                ],
                "body": {
                  "id": 584,
                  "nodeType": "Block",
                  "src": "4874:292:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 556,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "4897:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 557,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 547,
                            "src": "4903:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 558,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "4907:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 555,
                          "name": "transferFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "4884:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4884:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 560,
                      "nodeType": "ExpressionStatement",
                      "src": "4884:26:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4942:16:2",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 563,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 547,
                                    "src": "4955:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 562,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 798,
                                  "src": "4943:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4943:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 570,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5020:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5020:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 572,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 545,
                                    "src": "5032:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 573,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 549,
                                    "src": "5038:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 574,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 551,
                                    "src": "5042:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 567,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 547,
                                        "src": "4999:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 566,
                                      "name": "IERC721TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 813,
                                      "src": "4978:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$813_$",
                                        "typeString": "type(contract IERC721TokenReceiver)"
                                      }
                                    },
                                    "id": 568,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4978:24:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721TokenReceiver_$813",
                                      "typeString": "contract IERC721TokenReceiver"
                                    }
                                  },
                                  "id": 569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 812,
                                  "src": "4978:41:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4978:69:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 576,
                                    "name": "IERC721TokenReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "5071:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$813_$",
                                      "typeString": "type(contract IERC721TokenReceiver)"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 812,
                                  "src": "5071:37:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                  }
                                },
                                "id": 578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "5071:46:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "4978:139:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4942:175:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "554e534146455f524543495049454e54",
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5131:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            },
                            "value": "UNSAFE_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            }
                          ],
                          "id": 561,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4921:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4921:238:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 583,
                      "nodeType": "ExpressionStatement",
                      "src": "4921:238:2"
                    }
                  ]
                },
                "functionSelector": "b88d4fde",
                "id": 585,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "safeTransferFrom",
                "nameLocation": "4732:16:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 553,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "4861:8:2"
                },
                "parameters": {
                  "id": 552,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 545,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4757:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4749:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 544,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4749:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 547,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4771:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4763:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 546,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4763:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 549,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "4783:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4775:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 548,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4775:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 551,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4800:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4787:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 550,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4787:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4748:57:2"
                },
                "returnParameters": {
                  "id": 554,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4874:0:2"
                },
                "scope": 799,
                "src": "4723:443:2",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  9
                ],
                "body": {
                  "id": 605,
                  "nodeType": "Block",
                  "src": "5445:241:2",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 593,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "5462:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783031666663396137",
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5477:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_33540519_by_1",
                                "typeString": "int_const 33540519"
                              },
                              "value": "0x01ffc9a7"
                            },
                            "src": "5462:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 596,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "5537:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783830616335386364",
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5552:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2158778573_by_1",
                                "typeString": "int_const 2158778573"
                              },
                              "value": "0x80ac58cd"
                            },
                            "src": "5537:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5462:100:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 600,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "5612:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783562356531333966",
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5627:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1532892063_by_1",
                              "typeString": "int_const 1532892063"
                            },
                            "value": "0x5b5e139f"
                          },
                          "src": "5612:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5462:175:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 592,
                      "id": 604,
                      "nodeType": "Return",
                      "src": "5455:182:2"
                    }
                  ]
                },
                "functionSelector": "01ffc9a7",
                "id": 606,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "supportsInterface",
                "nameLocation": "5363:17:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 589,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "5421:8:2"
                },
                "parameters": {
                  "id": 588,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 587,
                      "mutability": "mutable",
                      "name": "interfaceId",
                      "nameLocation": "5388:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 606,
                      "src": "5381:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 586,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "5381:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5380:20:2"
                },
                "returnParameters": {
                  "id": 592,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 591,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 606,
                      "src": "5439:4:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 590,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5439:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5438:6:2"
                },
                "scope": 799,
                "src": "5354:332:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 655,
                  "nodeType": "Block",
                  "src": "5936:282:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 614,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "5954:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5968:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5960:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 615,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5960:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5960:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5954:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "494e56414c49445f524543495049454e54",
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5972:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
                              "typeString": "literal_string \"INVALID_RECIPIENT\""
                            },
                            "value": "INVALID_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
                              "typeString": "literal_string \"INVALID_RECIPIENT\""
                            }
                          ],
                          "id": 613,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5946:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5946:46:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 622,
                      "nodeType": "ExpressionStatement",
                      "src": "5946:46:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 624,
                                "name": "_ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "6011:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 626,
                              "indexExpression": {
                                "id": 625,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 610,
                                "src": "6020:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6011:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6035:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6027:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 627,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6027:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6027:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6011:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "414c52454144595f4d494e544544",
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6039:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b",
                              "typeString": "literal_string \"ALREADY_MINTED\""
                            },
                            "value": "ALREADY_MINTED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b",
                              "typeString": "literal_string \"ALREADY_MINTED\""
                            }
                          ],
                          "id": 623,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6003:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6003:53:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 634,
                      "nodeType": "ExpressionStatement",
                      "src": "6003:53:2"
                    },
                    {
                      "expression": {
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "6123:16:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 635,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "6123:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 637,
                          "indexExpression": {
                            "id": 636,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "6134:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6123:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 639,
                      "nodeType": "ExpressionStatement",
                      "src": "6123:16:2"
                    },
                    {
                      "expression": {
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 640,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "6150:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 642,
                          "indexExpression": {
                            "id": 641,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "6159:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6150:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 643,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "6165:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6150:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 645,
                      "nodeType": "ExpressionStatement",
                      "src": "6150:17:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6200:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6192:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 647,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6192:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6192:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 651,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "6204:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 652,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "6208:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 646,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6183:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6183:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 654,
                      "nodeType": "EmitStatement",
                      "src": "6178:33:2"
                    }
                  ]
                },
                "id": 656,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_mint",
                "nameLocation": "5889:5:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 611,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 608,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "5903:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 656,
                      "src": "5895:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 607,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5895:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 610,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "5915:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 656,
                      "src": "5907:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 609,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5907:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5894:24:2"
                },
                "returnParameters": {
                  "id": 612,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5936:0:2"
                },
                "scope": 799,
                "src": "5880:338:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 701,
                  "nodeType": "Block",
                  "src": "6268:239:2",
                  "statements": [
                    {
                      "assignments": [
                        662
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 662,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "6286:5:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 701,
                          "src": "6278:13:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6278:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 666,
                      "initialValue": {
                        "baseExpression": {
                          "id": 663,
                          "name": "_ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "6294:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 665,
                        "indexExpression": {
                          "id": 664,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "6303:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6294:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6278:28:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 668,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "6325:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 671,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6342:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6334:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 669,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6334:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6334:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6325:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4e4f545f4d494e544544",
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6346:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
                              "typeString": "literal_string \"NOT_MINTED\""
                            },
                            "value": "NOT_MINTED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
                              "typeString": "literal_string \"NOT_MINTED\""
                            }
                          ],
                          "id": 667,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6317:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6317:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 676,
                      "nodeType": "ExpressionStatement",
                      "src": "6317:42:2"
                    },
                    {
                      "expression": {
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "--",
                        "prefix": false,
                        "src": "6370:19:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 677,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "6370:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 679,
                          "indexExpression": {
                            "id": 678,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "6381:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6370:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 681,
                      "nodeType": "ExpressionStatement",
                      "src": "6370:19:2"
                    },
                    {
                      "expression": {
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "delete",
                        "prefix": true,
                        "src": "6400:19:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 682,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "6407:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 684,
                          "indexExpression": {
                            "id": 683,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "6416:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6407:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 686,
                      "nodeType": "ExpressionStatement",
                      "src": "6400:19:2"
                    },
                    {
                      "expression": {
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "delete",
                        "prefix": true,
                        "src": "6430:23:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 687,
                            "name": "_getApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "6437:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 689,
                          "indexExpression": {
                            "id": 688,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "6450:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6437:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 691,
                      "nodeType": "ExpressionStatement",
                      "src": "6430:23:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 693,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "6478:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6493:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6485:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 694,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6485:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6485:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 698,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "6497:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 692,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6469:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6469:31:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 700,
                      "nodeType": "EmitStatement",
                      "src": "6464:36:2"
                    }
                  ]
                },
                "id": 702,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_burn",
                "nameLocation": "6233:5:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 659,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 658,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "6247:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "6239:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 657,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6239:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6238:12:2"
                },
                "returnParameters": {
                  "id": 660,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6268:0:2"
                },
                "scope": 799,
                "src": "6224:283:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 740,
                  "nodeType": "Block",
                  "src": "6761:283:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 710,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "6777:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 711,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "6781:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 709,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 656,
                          "src": "6771:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6771:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 713,
                      "nodeType": "ExpressionStatement",
                      "src": "6771:13:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6816:16:2",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 716,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 704,
                                    "src": "6829:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 715,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 798,
                                  "src": "6817:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6817:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 723,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6894:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 724,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6894:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 727,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6914:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6906:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 725,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6906:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6906:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 729,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 706,
                                    "src": "6918:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 730,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6922:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 720,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 704,
                                        "src": "6873:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 719,
                                      "name": "IERC721TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 813,
                                      "src": "6852:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$813_$",
                                        "typeString": "type(contract IERC721TokenReceiver)"
                                      }
                                    },
                                    "id": 721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6852:24:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721TokenReceiver_$813",
                                      "typeString": "contract IERC721TokenReceiver"
                                    }
                                  },
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 812,
                                  "src": "6852:41:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6852:73:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 732,
                                    "name": "IERC721TokenReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "6949:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$813_$",
                                      "typeString": "type(contract IERC721TokenReceiver)"
                                    }
                                  },
                                  "id": 733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 812,
                                  "src": "6949:37:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6949:46:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6852:143:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6816:179:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "554e534146455f524543495049454e54",
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7009:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            },
                            "value": "UNSAFE_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            }
                          ],
                          "id": 714,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6795:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6795:242:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 739,
                      "nodeType": "ExpressionStatement",
                      "src": "6795:242:2"
                    }
                  ]
                },
                "id": 741,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_safeMint",
                "nameLocation": "6710:9:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 707,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 704,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "6728:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 741,
                      "src": "6720:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6720:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "6740:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 741,
                      "src": "6732:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6732:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6719:24:2"
                },
                "returnParameters": {
                  "id": 708,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6761:0:2"
                },
                "scope": 799,
                "src": "6701:343:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 781,
                  "nodeType": "Block",
                  "src": "7129:285:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 751,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "7145:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 752,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "7149:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 750,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 656,
                          "src": "7139:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7139:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 754,
                      "nodeType": "ExpressionStatement",
                      "src": "7139:13:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7184:16:2",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 757,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 743,
                                    "src": "7197:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 756,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 798,
                                  "src": "7185:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7185:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 764,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7262:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 765,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7262:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 768,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7282:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7274:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 766,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7274:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 769,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7274:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 770,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 745,
                                    "src": "7286:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 771,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 747,
                                    "src": "7290:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 761,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 743,
                                        "src": "7241:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 760,
                                      "name": "IERC721TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 813,
                                      "src": "7220:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$813_$",
                                        "typeString": "type(contract IERC721TokenReceiver)"
                                      }
                                    },
                                    "id": 762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7220:24:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721TokenReceiver_$813",
                                      "typeString": "contract IERC721TokenReceiver"
                                    }
                                  },
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 812,
                                  "src": "7220:41:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7220:75:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 773,
                                    "name": "IERC721TokenReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "7319:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$813_$",
                                      "typeString": "type(contract IERC721TokenReceiver)"
                                    }
                                  },
                                  "id": 774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 812,
                                  "src": "7319:37:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                  }
                                },
                                "id": 775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "7319:46:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "7220:145:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7184:181:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "554e534146455f524543495049454e54",
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7379:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            },
                            "value": "UNSAFE_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            }
                          ],
                          "id": 755,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7163:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7163:244:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 780,
                      "nodeType": "ExpressionStatement",
                      "src": "7163:244:2"
                    }
                  ]
                },
                "id": 782,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_safeMint",
                "nameLocation": "7059:9:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 748,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 743,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "7077:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "7069:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 742,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7069:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 745,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "7089:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "7081:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 744,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7081:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 747,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7106:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "7093:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 746,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7093:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7068:43:2"
                },
                "returnParameters": {
                  "id": 749,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7129:0:2"
                },
                "scope": 799,
                "src": "7050:364:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 797,
                  "nodeType": "Block",
                  "src": "7663:214:2",
                  "statements": [
                    {
                      "assignments": [
                        790
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 790,
                          "mutability": "mutable",
                          "name": "codeLength",
                          "nameLocation": "7681:10:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 797,
                          "src": "7673:18:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 789,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7673:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 791,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7673:18:2"
                    },
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "7783:56:2",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "7797:32:2",
                            "value": {
                              "arguments": [
                                {
                                  "name": "_addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7823:5:2"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "7811:11:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7811:18:2"
                            },
                            "variableNames": [
                              {
                                "name": "codeLength",
                                "nodeType": "YulIdentifier",
                                "src": "7797:10:2"
                              }
                            ]
                          }
                        ]
                      },
                      "evmVersion": "london",
                      "externalReferences": [
                        {
                          "declaration": 784,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7823:5:2",
                          "valueSize": 1
                        },
                        {
                          "declaration": 790,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7797:10:2",
                          "valueSize": 1
                        }
                      ],
                      "id": 792,
                      "nodeType": "InlineAssembly",
                      "src": "7774:65:2"
                    },
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 793,
                          "name": "codeLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "7856:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7869:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7856:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 788,
                      "id": 796,
                      "nodeType": "Return",
                      "src": "7849:21:2"
                    }
                  ]
                },
                "id": 798,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_isContract",
                "nameLocation": "7608:11:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 785,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "_addr",
                      "nameLocation": "7628:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 798,
                      "src": "7620:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 783,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7620:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7619:15:2"
                },
                "returnParameters": {
                  "id": 788,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 787,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 798,
                      "src": "7657:4:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 786,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7657:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7656:6:2"
                },
                "scope": 799,
                "src": "7599:278:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 814,
            "src": "381:7498:2",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IERC721TokenReceiver",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 813,
            "linearizedBaseContracts": [
              813
            ],
            "name": "IERC721TokenReceiver",
            "nameLocation": "7891:20:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "150b7a02",
                "id": 812,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "onERC721Received",
                "nameLocation": "7927:16:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 808,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 801,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "7944:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 800,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7944:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 803,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "7953:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 802,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7953:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 805,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "7962:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 804,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7962:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "7971:14:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7971:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7943:43:2"
                },
                "returnParameters": {
                  "id": 811,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 810,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "8005:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 809,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "8005:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8004:8:2"
                },
                "scope": 813,
                "src": "7918:95:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 814,
            "src": "7881:134:2",
            "usedErrors": []
          }
        ],
        "src": "32:7984:2"
      }
    }
  },
  "errors": [
    {
      "component": "general",
      "errorCode": null,
      "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: Your code or one of its dependencies uses the 'extcodesize' instruction, which is       │\n│ usually needed in the following cases:                                                           │\n│   1. To detect whether an address belongs to a smart contract.                                   │\n│   2. To detect whether the deploy code execution has finished.                                   │\n│ zkSync Era comes with native account abstraction support (so accounts are smart contracts,       │\n│ including private-key controlled EOAs), and you should avoid differentiating between contracts   │\n│ and non-contract addresses.                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> lib/forge-std/src/mocks/MockERC721.sol\n",
      "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: Your code or one of its dependencies uses the 'extcodesize' instruction, which is       │\n│ usually needed in the following cases:                                                           │\n│   1. To detect whether an address belongs to a smart contract.                                   │\n│   2. To detect whether the deploy code execution has finished.                                   │\n│ zkSync Era comes with native account abstraction support (so accounts are smart contracts,       │\n│ including private-key controlled EOAs), and you should avoid differentiating between contracts   │\n│ and non-contract addresses.                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
      "severity": "warning",
      "sourceLocation": {
        "file": "2",
        "start": 7811,
        "end": 7829
      },
      "type": "Warning"
    }
  ],
  "version": "0.8.13",
  "long_version": "0.8.13+commit.abaa5c0e.Darwin.appleclang",
  "zk_version": "1.4.1"
}