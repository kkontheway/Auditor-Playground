{
  "contracts": {
    "lib/forge-std/src/StdError.sol": {
      "stdError": {
        "abi": [
          {
            "inputs": [],
            "name": "arithmeticError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "assertionError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "divisionError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "encodeStorageError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "enumConversionError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "indexOOBError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "memOverflowError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "popError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "zeroVarError",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"arithmeticError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divisionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodeStorageError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enumConversionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexOOBError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memOverflowError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"popError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zeroVarError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdError.sol\":\"stdError\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]}},\"version\":1}",
          "solc_version": "0.8.13",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"StdError.sol:stdError\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_1[0], r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.le\t@.BB0_6\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.le\t@.BB0_12\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.eq\t@.BB0_24\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.eq\t@.BB0_25\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB0_18\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_9\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_17\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t1, r0, r1\n\tjump\t@.BB0_18\n.BB0_12:\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_22\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t49, r0, r1\n\tjump\t@.BB0_18\n.BB0_9:\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_20\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_18\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_24:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t81, r0, r1\n\tjump\t@.BB0_18\n.BB0_25:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_18\n.BB0_17:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_18\n.BB0_22:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB0_18\n.BB0_20:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t160, r1\n\tadd\t33, r0, r1\n.BB0_18:\n\tst.1\t164, r1\n\tadd\t36, r0, r1\n\tst.1\t128, r1\n\tadd\t224, r0, r1\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tsub.s\t224, r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_bytes:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1.inc\tr2, r2, r3\n\tst.1\tr4, r2\n\tsub!\tr2, r0, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB1_5\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB1_2\n\tsub!\tr4, r2, r3\n\tjump.le\t@.BB1_5\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n.BB1_5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_1:\n\t.cell 340282366604025813406317257057592410112\nCPI0_2:\n\t.cell 2557239143\nCPI0_3:\n\t.cell 3061221849\nCPI0_4:\n\t.cell 3061221850\nCPI0_5:\n\t.cell 3512788190\nCPI0_6:\n\t.cell 4202187332\nCPI0_7:\n\t.cell 2557239144\nCPI0_8:\n\t.cell 2989344077\nCPI0_9:\n\t.cell 501503327\nCPI0_10:\n\t.cell 501503328\nCPI0_11:\n\t.cell 2308253967\nCPI0_12:\n\t.cell 99517970\nCPI0_13:\n\t.cell 271788407\nCPI0_14:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_15:\n\t.cell 4294967295\nCPI0_16:\n\t.cell 4132070672510939561984\n",
          "bytecode": {
            "object": "0000008003000039000000400030043f0000000102200190000000170000c13d00000000020100190000001f02200198000000390000613d000000000101043b000000e001100270000000200210009c0000001f0000a13d000000210210009c000000290000a13d000000220210009c0000003b0000613d000000230210009c0000003f0000613d000000240110009c000000390000c13d0000002c01000041000000a00010043f00000012010000390000004e0000013d0000000001000416000000000101004b000000390000c13d0000002001000039000001000010044300000120000004430000001e01000041000000750001042e000000270210009c000000310000213d0000002a0210009c000000430000613d0000002b0110009c000000390000c13d0000002c01000041000000a00010043f00000001010000390000004e0000013d000000250210009c000000470000613d000000260110009c000000390000c13d0000002c01000041000000a00010043f00000031010000390000004e0000013d000000280210009c0000004b0000613d000000290110009c000000390000c13d0000002c01000041000000a00010043f00000011010000390000004e0000013d000000000100001900000076000104300000002c01000041000000a00010043f00000051010000390000004e0000013d0000002c01000041000000a00010043f00000022010000390000004e0000013d0000002c01000041000000a00010043f00000032010000390000004e0000013d0000002c01000041000000a00010043f00000041010000390000004e0000013d0000002c01000041000000a00010043f0000002101000039000000a40010043f0000002401000039000000800010043f000000e001000039000000400010043f00000080020000390074005c0000040f000000e00110008a0000002d020000410000002d0310009c000000000102801900000060011002100000002e011001c7000000750001042e0000002003000039000000000431043600000000320204340000000000240435000000000402004b00000040011000390000006f0000613d000000000400001900000000054100190000000006430019000000000606043300000000006504350000002004400039000000000524004b000000640000413d000000000324004b0000006f0000a13d000000000321001900000000000304350000001f02200039000000200300008a000000000232016f0000000001210019000000000001042d0000007400000432000000750001042e00000076000104300000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc00000000000000000000000000000000000000000000000000000000000000000000000000000000986c5f6700000000000000000000000000000000000000000000000000000000b67689d900000000000000000000000000000000000000000000000000000000b67689da00000000000000000000000000000000000000000000000000000000d160e4de00000000000000000000000000000000000000000000000000000000fa784a4400000000000000000000000000000000000000000000000000000000986c5f6800000000000000000000000000000000000000000000000000000000b22dc54d000000000000000000000000000000000000000000000000000000001de4555f000000000000000000000000000000000000000000000000000000001de45560000000000000000000000000000000000000000000000000000000008995290f0000000000000000000000000000000000000000000000000000000005ee861200000000000000000000000000000000000000000000000000000000103329774e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000128d79c4b5dbf138273892a4d90a6d6b4771b030309f01377e82b7a6a718dfdf"
          },
          "methodIdentifiers": {
            "arithmeticError()": "8995290f",
            "assertionError()": "10332977",
            "divisionError()": "fa784a44",
            "encodeStorageError()": "d160e4de",
            "enumConversionError()": "1de45560",
            "indexOOBError()": "05ee8612",
            "memOverflowError()": "986c5f68",
            "popError()": "b22dc54d",
            "zeroVarError()": "b67689da"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/forge-std/src/StdError.sol\"\nobject \"stdError_65\" {\n    code {\n        {\n            /// @src 0:162:1012  \"library stdError {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"stdError_65_deployed\")\n            codecopy(_1, dataoffset(\"stdError_65_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/StdError.sol\"\n    object \"stdError_65_deployed\" {\n        code {\n            {\n                /// @src 0:162:1012  \"library stdError {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x05ee8612 {\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\"\n                        mstore(add(_1, 0x20), shl(224, 0x4e487b71))\n                        /// @src 0:162:1012  \"library stdError {...\"\n                        mstore(/** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ add(_1, 36), /** @src 0:820:824  \"0x32\" */ 0x32)\n                        /// @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\"\n                        mstore(_1, 36)\n                        finalize_allocation(_1)\n                        /// @src 0:162:1012  \"library stdError {...\"\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_bytes(memPos, _1), memPos))\n                    }\n                    case 0x10332977 { external_fun_assertionError() }\n                    case 0x1de45560 {\n                        external_fun_enumConversionError()\n                    }\n                    case 0x8995290f {\n                        external_fun_arithmeticError()\n                    }\n                    case 0x986c5f68 {\n                        external_fun_memOverflowError()\n                    }\n                    case 0xb22dc54d { external_fun_popError() }\n                    case 0xb67689da { external_fun_zeroVarError() }\n                    case 0xd160e4de {\n                        external_fun_encodeStorageError()\n                    }\n                    case 0xfa784a44 { external_fun_divisionError() }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                    /// @src 0:162:1012  \"library stdError {...\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_bytes(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function external_fun_assertionError()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:224:271  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x01)\"\n                let expr_mpos := /** @src 0:162:1012  \"library stdError {...\" */ mload(64)\n                /// @src 0:224:271  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x01)\"\n                mstore(add(expr_mpos, 0x20), /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                /// @src 0:162:1012  \"library stdError {...\"\n                mstore(/** @src 0:224:271  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x01)\" */ add(expr_mpos, 36), /** @src 0:266:270  \"0x01\" */ 0x01)\n                /// @src 0:224:271  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x01)\"\n                mstore(expr_mpos, 36)\n                finalize_allocation(expr_mpos)\n                /// @src 0:162:1012  \"library stdError {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, expr_mpos), memPos))\n            }\n            function external_fun_enumConversionError()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:505:552  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x21)\"\n                let expr_mpos := /** @src 0:162:1012  \"library stdError {...\" */ mload(64)\n                /// @src 0:505:552  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x21)\"\n                mstore(add(expr_mpos, 0x20), /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                /// @src 0:162:1012  \"library stdError {...\"\n                mstore(/** @src 0:505:552  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x21)\" */ add(expr_mpos, 36), /** @src 0:547:551  \"0x21\" */ 0x21)\n                /// @src 0:505:552  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x21)\"\n                mstore(expr_mpos, 36)\n                finalize_allocation(expr_mpos)\n                /// @src 0:162:1012  \"library stdError {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, expr_mpos), memPos))\n            }\n            function external_fun_arithmeticError()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:317:364  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x11)\"\n                let expr_mpos := /** @src 0:162:1012  \"library stdError {...\" */ mload(64)\n                /// @src 0:317:364  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x11)\"\n                mstore(add(expr_mpos, 0x20), /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                /// @src 0:162:1012  \"library stdError {...\"\n                mstore(/** @src 0:317:364  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x11)\" */ add(expr_mpos, 36), /** @src 0:359:363  \"0x11\" */ 0x11)\n                /// @src 0:317:364  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x11)\"\n                mstore(expr_mpos, 36)\n                finalize_allocation(expr_mpos)\n                /// @src 0:162:1012  \"library stdError {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, expr_mpos), memPos))\n            }\n            function external_fun_memOverflowError()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:872:919  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x41)\"\n                let expr_mpos := /** @src 0:162:1012  \"library stdError {...\" */ mload(64)\n                /// @src 0:872:919  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x41)\"\n                mstore(add(expr_mpos, 0x20), /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                /// @src 0:162:1012  \"library stdError {...\"\n                mstore(/** @src 0:872:919  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x41)\" */ add(expr_mpos, 36), /** @src 0:914:918  \"0x41\" */ 0x41)\n                /// @src 0:872:919  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x41)\"\n                mstore(expr_mpos, 36)\n                finalize_allocation(expr_mpos)\n                /// @src 0:162:1012  \"library stdError {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, expr_mpos), memPos))\n            }\n            function external_fun_popError()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:687:734  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x31)\"\n                let expr_mpos := /** @src 0:162:1012  \"library stdError {...\" */ mload(64)\n                /// @src 0:687:734  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x31)\"\n                mstore(add(expr_mpos, 0x20), /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                /// @src 0:162:1012  \"library stdError {...\"\n                mstore(/** @src 0:687:734  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x31)\" */ add(expr_mpos, 36), /** @src 0:729:733  \"0x31\" */ 0x31)\n                /// @src 0:687:734  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x31)\"\n                mstore(expr_mpos, 36)\n                finalize_allocation(expr_mpos)\n                /// @src 0:162:1012  \"library stdError {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, expr_mpos), memPos))\n            }\n            function external_fun_zeroVarError()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:962:1009  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x51)\"\n                let expr_mpos := /** @src 0:162:1012  \"library stdError {...\" */ mload(64)\n                /// @src 0:962:1009  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x51)\"\n                mstore(add(expr_mpos, 0x20), /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                /// @src 0:162:1012  \"library stdError {...\"\n                mstore(/** @src 0:962:1009  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x51)\" */ add(expr_mpos, 36), /** @src 0:1004:1008  \"0x51\" */ 0x51)\n                /// @src 0:962:1009  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x51)\"\n                mstore(expr_mpos, 36)\n                finalize_allocation(expr_mpos)\n                /// @src 0:162:1012  \"library stdError {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, expr_mpos), memPos))\n            }\n            function external_fun_encodeStorageError()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:601:648  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x22)\"\n                let expr_mpos := /** @src 0:162:1012  \"library stdError {...\" */ mload(64)\n                /// @src 0:601:648  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x22)\"\n                mstore(add(expr_mpos, 0x20), /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                /// @src 0:162:1012  \"library stdError {...\"\n                mstore(/** @src 0:601:648  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x22)\" */ add(expr_mpos, 36), /** @src 0:643:647  \"0x22\" */ 0x22)\n                /// @src 0:601:648  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x22)\"\n                mstore(expr_mpos, 36)\n                finalize_allocation(expr_mpos)\n                /// @src 0:162:1012  \"library stdError {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, expr_mpos), memPos))\n            }\n            function external_fun_divisionError()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:408:455  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x12)\"\n                let expr_mpos := /** @src 0:162:1012  \"library stdError {...\" */ mload(64)\n                /// @src 0:408:455  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x12)\"\n                mstore(add(expr_mpos, 0x20), /** @src 0:778:825  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x32)\" */ shl(224, 0x4e487b71))\n                /// @src 0:162:1012  \"library stdError {...\"\n                mstore(/** @src 0:408:455  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x12)\" */ add(expr_mpos, 36), /** @src 0:450:454  \"0x12\" */ 0x12)\n                /// @src 0:408:455  \"abi.encodeWithSignature(\\\"Panic(uint256)\\\", 0x12)\"\n                mstore(expr_mpos, 36)\n                finalize_allocation(expr_mpos)\n                /// @src 0:162:1012  \"library stdError {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, expr_mpos), memPos))\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e3209efc663cbf86633c8cf2b733ec30621dd82fd37672ef830df91e32a8e73164736f6c634300080d0033\"\n    }\n}\n",
        "hash": "01000031cd8b6a9ffd93f0cfd887525e1597a5f2bed38ae8a77cfb239bf16b46",
        "factoryDependencies": {}
      }
    }
  },
  "sources": {
    "lib/forge-std/src/StdError.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "lib/forge-std/src/StdError.sol",
        "exportedSymbols": {
          "stdError": [
            65
          ]
        },
        "id": 66,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".2",
              "<",
              "0.9",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "129:31:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "stdError",
            "contractDependencies": [],
            "contractKind": "library",
            "fullyImplemented": true,
            "id": 65,
            "linearizedBaseContracts": [
              65
            ],
            "name": "stdError",
            "nameLocation": "170:8:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "functionSelector": "10332977",
                "id": 8,
                "mutability": "constant",
                "name": "assertionError",
                "nameLocation": "207:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "185:86:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 2,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "185:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 5,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "248:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783031",
                      "id": 6,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "266:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "0x01"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      }
                    ],
                    "expression": {
                      "id": 3,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "224:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 4,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "224:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 7,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "224:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "functionSelector": "8995290f",
                "id": 15,
                "mutability": "constant",
                "name": "arithmeticError",
                "nameLocation": "299:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "277:87:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 9,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "341:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783131",
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "359:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_17_by_1",
                        "typeString": "int_const 17"
                      },
                      "value": "0x11"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_17_by_1",
                        "typeString": "int_const 17"
                      }
                    ],
                    "expression": {
                      "id": 10,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "317:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "317:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 14,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "317:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "functionSelector": "fa784a44",
                "id": 22,
                "mutability": "constant",
                "name": "divisionError",
                "nameLocation": "392:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "370:85:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 16,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "370:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "432:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783132",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "450:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "0x12"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      }
                    ],
                    "expression": {
                      "id": 17,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "408:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "408:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 21,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "408:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "functionSelector": "1de45560",
                "id": 29,
                "mutability": "constant",
                "name": "enumConversionError",
                "nameLocation": "483:19:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "461:91:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 23,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "461:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "529:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783231",
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "547:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_33_by_1",
                        "typeString": "int_const 33"
                      },
                      "value": "0x21"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_33_by_1",
                        "typeString": "int_const 33"
                      }
                    ],
                    "expression": {
                      "id": 24,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "505:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "505:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 28,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "505:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "functionSelector": "d160e4de",
                "id": 36,
                "mutability": "constant",
                "name": "encodeStorageError",
                "nameLocation": "580:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "558:90:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 30,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "625:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783232",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "643:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_34_by_1",
                        "typeString": "int_const 34"
                      },
                      "value": "0x22"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_34_by_1",
                        "typeString": "int_const 34"
                      }
                    ],
                    "expression": {
                      "id": 31,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "601:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "601:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 35,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "601:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "functionSelector": "b22dc54d",
                "id": 43,
                "mutability": "constant",
                "name": "popError",
                "nameLocation": "676:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "654:80:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 37,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "654:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "711:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783331",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "729:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_49_by_1",
                        "typeString": "int_const 49"
                      },
                      "value": "0x31"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_49_by_1",
                        "typeString": "int_const 49"
                      }
                    ],
                    "expression": {
                      "id": 38,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "687:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "687:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 42,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "687:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "functionSelector": "05ee8612",
                "id": 50,
                "mutability": "constant",
                "name": "indexOOBError",
                "nameLocation": "762:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "740:85:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 44,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "802:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783332",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "820:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "0x32"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      }
                    ],
                    "expression": {
                      "id": 45,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "778:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "778:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 49,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "778:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "functionSelector": "986c5f68",
                "id": 57,
                "mutability": "constant",
                "name": "memOverflowError",
                "nameLocation": "853:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "831:88:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 51,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "831:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "896:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783431",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "914:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_65_by_1",
                        "typeString": "int_const 65"
                      },
                      "value": "0x41"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_65_by_1",
                        "typeString": "int_const 65"
                      }
                    ],
                    "expression": {
                      "id": 52,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "872:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "872:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 56,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "872:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "functionSelector": "b67689da",
                "id": 64,
                "mutability": "constant",
                "name": "zeroVarError",
                "nameLocation": "947:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 65,
                "src": "925:84:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_memory_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "925:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "hexValue": "50616e69632875696e7432353629",
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "986:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      "value": "Panic(uint256)"
                    },
                    {
                      "hexValue": "30783531",
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1004:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_81_by_1",
                        "typeString": "int_const 81"
                      },
                      "value": "0x51"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_4e487b71539e0164c9d29506cc725e49342bcac15e0927282bf30fedfe1c7268",
                        "typeString": "literal_string \"Panic(uint256)\""
                      },
                      {
                        "typeIdentifier": "t_rational_81_by_1",
                        "typeString": "int_const 81"
                      }
                    ],
                    "expression": {
                      "id": 59,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "962:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodeWithSignature",
                    "nodeType": "MemberAccess",
                    "src": "962:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function (string memory) pure returns (bytes memory)"
                    }
                  },
                  "id": 63,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "962:47:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "visibility": "public"
              }
            ],
            "scope": 66,
            "src": "162:850:0",
            "usedErrors": []
          }
        ],
        "src": "129:884:0"
      }
    }
  },
  "errors": [],
  "version": "0.8.13",
  "long_version": "0.8.13+commit.abaa5c0e.Darwin.appleclang",
  "zk_version": "1.4.1"
}