{
  "language": "Solidity",
  "sources": {
    "src/Assembly/EVMAssembly.sol": {
      "content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity 0.8.13;\n\ncontract EVMAssembly {\n    function test_yul_var() public pure returns (uint256) {\n        uint256 s = 0;\n        assembly {\n            let x := 0\n            x := 1\n            s := 2\n        }\n        return s;\n    }\n\n    function test_yul_types() public pure returns (bool x, uint256 y, bytes32 z) {\n        assembly {\n            x := 1\n            y := 0xaaa\n            z := \"Hello Yul\"\n        }\n        return (x, y, z);\n    }\n}\n"
    }
  },
  "settings": {
    "remappings": [
      "ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/",
      "forge-std/=lib/forge-std/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "mode": "3",
      "details": null,
      "fallbackToOptimizingForSize": false,
      "disableSystemRequestMemoization": true
    },
    "outputSelection": {
      "*": {
        "": [
          "metadata"
        ],
        "*": [
          "abi",
          "evm.methodIdentifiers"
        ]
      }
    },
    "libraries": {},
    "isSystem": false,
    "forceEvmla": false,
    "areLibrariesMissing": true
  }
}